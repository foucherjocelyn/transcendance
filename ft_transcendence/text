webserver  | Server running on port 5500
webserver  | starting request42token-------------
webserver  | AxiosError: Request failed with status code 401
webserver  |     at settle (/webServer/node_modules/axios/dist/node/axios.cjs:1983:12)
webserver  |     at Unzip.handleStreamEnd (/webServer/node_modules/axios/dist/node/axios.cjs:3085:11)
webserver  |     at Unzip.emit (node:events:532:35)
webserver  |     at endReadableNT (node:internal/streams/readable:1696:12)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
webserver  |     at Axios.request (/webServer/node_modules/axios/dist/node/axios.cjs:4224:41)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
webserver  |     at async request42Token (/webServer/webServer/js/oauth2.js:29:28)
webserver  |     at async retrieveCodeCreateAccount (/webServer/webServer/js/oauth2.js:14:19)
webserver  |     at async Server.requestListener (/webServer/webServer/js/webServer.js:45:9) {
webserver  |   code: 'ERR_BAD_REQUEST',
webserver  |   config: {
webserver  |     transitional: {
webserver  |       silentJSONParsing: true,
webserver  |       forcedJSONParsing: true,
webserver  |       clarifyTimeoutError: false
webserver  |     },
webserver  |     adapter: [ 'xhr', 'http', 'fetch' ],
webserver  |     transformRequest: [ [Function: transformRequest] ],
webserver  |     transformResponse: [ [Function: transformResponse] ],
webserver  |     timeout: 0,
webserver  |     xsrfCookieName: 'XSRF-TOKEN',
webserver  |     xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |     maxContentLength: -1,
webserver  |     maxBodyLength: -1,
webserver  |     env: { FormData: [Function], Blob: [class Blob] },
webserver  |     validateStatus: [Function: validateStatus],
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       Accept: 'application/json, text/plain, */*',
webserver  |       'Content-Type': 'application/json',
webserver  |       'User-Agent': 'axios/1.7.2',
webserver  |       'Content-Length': '330',
webserver  |       'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |     },
webserver  |     method: 'post',
webserver  |     url: 'https://api.intra.42.fr/oauth/token',
webserver  |     data: '{"grant_type":"authorization_code","client_id":"u-s4t2ud-5a9d7a791c31267b140be75dcb88368fd21ecc552a388ba8a2a2e5320d82015d","client_secret":"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","code":"61958942f7b93aac44ee236b971245220c3bc20896e6f6bda20943f789b4af49","redirect_uri":"https://127.0.0.1:5500/"}'
webserver  |   },
webserver  |   request: <ref *1> ClientRequest {
webserver  |     _events: [Object: null prototype] {
webserver  |       abort: [Function (anonymous)],
webserver  |       aborted: [Function (anonymous)],
webserver  |       connect: [Function (anonymous)],
webserver  |       error: [Function (anonymous)],
webserver  |       socket: [Function (anonymous)],
webserver  |       timeout: [Function (anonymous)],
webserver  |       finish: [Function: requestOnFinish]
webserver  |     },
webserver  |     _eventsCount: 7,
webserver  |     _maxListeners: undefined,
webserver  |     outputData: [],
webserver  |     outputSize: 0,
webserver  |     writable: true,
webserver  |     destroyed: true,
webserver  |     _last: false,
webserver  |     chunkedEncoding: false,
webserver  |     shouldKeepAlive: true,
webserver  |     maxRequestsOnConnectionReached: false,
webserver  |     _defaultKeepAlive: true,
webserver  |     useChunkedEncodingByDefault: true,
webserver  |     sendDate: false,
webserver  |     _removedConnection: false,
webserver  |     _removedContLen: false,
webserver  |     _removedTE: false,
webserver  |     strictContentLength: false,
webserver  |     _contentLength: '330',
webserver  |     _hasBody: true,
webserver  |     _trailer: '',
webserver  |     finished: true,
webserver  |     _headerSent: true,
webserver  |     _closed: true,
webserver  |     _header: 'POST /oauth/token HTTP/1.1\r\n' +
webserver  |       'Accept: application/json, text/plain, */*\r\n' +
webserver  |       'Content-Type: application/json\r\n' +
webserver  |       'User-Agent: axios/1.7.2\r\n' +
webserver  |       'Content-Length: 330\r\n' +
webserver  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |       'Host: api.intra.42.fr\r\n' +
webserver  |       'Connection: keep-alive\r\n' +
webserver  |       '\r\n',
webserver  |     _keepAliveTimeout: 0,
webserver  |     _onPendingData: [Function: nop],
webserver  |     agent: Agent {
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 2,
webserver  |       _maxListeners: undefined,
webserver  |       defaultPort: 443,
webserver  |       protocol: 'https:',
webserver  |       options: [Object: null prototype],
webserver  |       requests: [Object: null prototype] {},
webserver  |       sockets: [Object: null prototype] {},
webserver  |       freeSockets: [Object: null prototype],
webserver  |       keepAliveMsecs: 1000,
webserver  |       keepAlive: true,
webserver  |       maxSockets: Infinity,
webserver  |       maxFreeSockets: 256,
webserver  |       scheduling: 'lifo',
webserver  |       maxTotalSockets: Infinity,
webserver  |       totalSocketCount: 1,
webserver  |       maxCachedSessions: 100,
webserver  |       _sessionCache: [Object],
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     socketPath: undefined,
webserver  |     method: 'POST',
webserver  |     maxHeaderSize: undefined,
webserver  |     insecureHTTPParser: undefined,
webserver  |     joinDuplicateHeaders: undefined,
webserver  |     path: '/oauth/token',
webserver  |     _ended: true,
webserver  |     res: IncomingMessage {
webserver  |       _events: [Object],
webserver  |       _readableState: [ReadableState],
webserver  |       _maxListeners: undefined,
webserver  |       socket: null,
webserver  |       httpVersionMajor: 1,
webserver  |       httpVersionMinor: 1,
webserver  |       httpVersion: '1.1',
webserver  |       complete: true,
webserver  |       rawHeaders: [Array],
webserver  |       rawTrailers: [],
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       aborted: false,
webserver  |       upgrade: false,
webserver  |       url: '',
webserver  |       method: null,
webserver  |       statusCode: 401,
webserver  |       statusMessage: 'Unauthorized',
webserver  |       client: [TLSSocket],
webserver  |       _consuming: true,
webserver  |       _dumped: false,
webserver  |       req: [Circular *1],
webserver  |       _eventsCount: 4,
webserver  |       responseUrl: 'https://api.intra.42.fr/oauth/token',
webserver  |       redirects: [],
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kHeaders)]: [Object],
webserver  |       [Symbol(kHeadersCount)]: 36,
webserver  |       [Symbol(kTrailers)]: null,
webserver  |       [Symbol(kTrailersCount)]: 0
webserver  |     },
webserver  |     aborted: false,
webserver  |     timeoutCb: null,
webserver  |     upgradeOrConnect: false,
webserver  |     parser: null,
webserver  |     maxHeadersCount: null,
webserver  |     reusedSocket: false,
webserver  |     host: 'api.intra.42.fr',
webserver  |     protocol: 'https:',
webserver  |     _redirectable: Writable {
webserver  |       _events: [Object],
webserver  |       _writableState: [WritableState],
webserver  |       _maxListeners: undefined,
webserver  |       _options: [Object],
webserver  |       _ended: true,
webserver  |       _ending: true,
webserver  |       _redirectCount: 0,
webserver  |       _redirects: [],
webserver  |       _requestBodyLength: 330,
webserver  |       _requestBodyBuffers: [],
webserver  |       _eventsCount: 3,
webserver  |       _onNativeResponse: [Function (anonymous)],
webserver  |       _currentRequest: [Circular *1],
webserver  |       _currentUrl: 'https://api.intra.42.fr/oauth/token',
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     [Symbol(shapeMode)]: false,
webserver  |     [Symbol(kCapture)]: false,
webserver  |     [Symbol(kBytesWritten)]: 0,
webserver  |     [Symbol(kNeedDrain)]: false,
webserver  |     [Symbol(corked)]: 0,
webserver  |     [Symbol(kChunkedBuffer)]: [],
webserver  |     [Symbol(kChunkedLength)]: 0,
webserver  |     [Symbol(kSocket)]: TLSSocket {
webserver  |       _tlsOptions: [Object],
webserver  |       _secureEstablished: true,
webserver  |       _securePending: false,
webserver  |       _newSessionPending: false,
webserver  |       _controlReleased: true,
webserver  |       secureConnecting: false,
webserver  |       _SNICallback: null,
webserver  |       servername: 'api.intra.42.fr',
webserver  |       alpnProtocol: false,
webserver  |       authorized: true,
webserver  |       authorizationError: null,
webserver  |       encrypted: true,
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 9,
webserver  |       connecting: false,
webserver  |       _hadError: false,
webserver  |       _parent: null,
webserver  |       _host: 'api.intra.42.fr',
webserver  |       _closeAfterHandlingError: false,
webserver  |       _readableState: [ReadableState],
webserver  |       _writableState: [WritableState],
webserver  |       allowHalfOpen: false,
webserver  |       _maxListeners: undefined,
webserver  |       _sockname: null,
webserver  |       _pendingData: null,
webserver  |       _pendingEncoding: '',
webserver  |       server: undefined,
webserver  |       _server: null,
webserver  |       ssl: [TLSWrap],
webserver  |       _requestCert: true,
webserver  |       _rejectUnauthorized: true,
webserver  |       timeout: 5000,
webserver  |       parser: null,
webserver  |       _httpMessage: null,
webserver  |       autoSelectFamilyAttemptedAddresses: [Array],
webserver  |       [Symbol(alpncallback)]: null,
webserver  |       [Symbol(res)]: [TLSWrap],
webserver  |       [Symbol(verified)]: true,
webserver  |       [Symbol(pendingSession)]: null,
webserver  |       [Symbol(async_id_symbol)]: -1,
webserver  |       [Symbol(kHandle)]: [TLSWrap],
webserver  |       [Symbol(lastWriteQueueSize)]: 0,
webserver  |       [Symbol(timeout)]: Timeout {
webserver  |         _idleTimeout: 5000,
webserver  |         _idlePrev: [TimersList],
webserver  |         _idleNext: [TimersList],
webserver  |         _idleStart: 31771,
webserver  |         _onTimeout: [Function: bound ],
webserver  |         _timerArgs: undefined,
webserver  |         _repeat: null,
webserver  |         _destroyed: false,
webserver  |         [Symbol(refed)]: false,
webserver  |         [Symbol(kHasPrimitive)]: false,
webserver  |         [Symbol(asyncId)]: 55,
webserver  |         [Symbol(triggerId)]: 53
webserver  |       },
webserver  |       [Symbol(kBuffer)]: null,
webserver  |       [Symbol(kBufferCb)]: null,
webserver  |       [Symbol(kBufferGen)]: null,
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kSetNoDelay)]: false,
webserver  |       [Symbol(kSetKeepAlive)]: true,
webserver  |       [Symbol(kSetKeepAliveInitialDelay)]: 1,
webserver  |       [Symbol(kBytesRead)]: 0,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(connect-options)]: [Object]
webserver  |     },
webserver  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
webserver  |       accept: [Array],
webserver  |       'content-type': [Array],
webserver  |       'user-agent': [Array],
webserver  |       'content-length': [Array],
webserver  |       'accept-encoding': [Array],
webserver  |       host: [Array]
webserver  |     },
webserver  |     [Symbol(errored)]: null,
webserver  |     [Symbol(kHighWaterMark)]: 65536,
webserver  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |     [Symbol(kUniqueHeaders)]: null
webserver  |   },
webserver  |   response: {
webserver  |     status: 401,
webserver  |     statusText: 'Unauthorized',
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       date: 'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |       'content-type': 'application/json; charset=utf-8',
webserver  |       'transfer-encoding': 'chunked',
webserver  |       connection: 'keep-alive',
webserver  |       'cache-control': 'no-store',
webserver  |       pragma: 'no-cache',
webserver  |       status: '401 Unauthorized',
webserver  |       vary: 'Origin,Accept-Encoding',
webserver  |       'www-authenticate': 'Bearer realm="42 API", error="invalid_grant", error_description="The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."',
webserver  |       'x-rack-cors': 'preflight-hit; no-origin',
webserver  |       'x-request-id': 'a111464a-f914-4cc9-97f7-58af128a67af',
webserver  |       'x-runtime': '0.006512',
webserver  |       'cf-cache-status': 'DYNAMIC',
webserver  |       'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=XuJwg7VyM8fKBvTfXHIG09r6u0ksQc1QePQ4dcLOiMV1PKL0KKavs1%2BzC2A%2BJroESefLZ0IxvtnlOAKvQxQHlivBOmppZFiTlCa8RQpfCJH%2F7IEEwVgqW1jK6pdWlD80lQ%3D%3D"}],"group":"cf-nel","max_age":604800}',
webserver  |       nel: '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}',
webserver  |       server: 'cloudflare',
webserver  |       'cf-ray': '896a895c59060a65-AMS'
webserver  |     },
webserver  |     config: {
webserver  |       transitional: [Object],
webserver  |       adapter: [Array],
webserver  |       transformRequest: [Array],
webserver  |       transformResponse: [Array],
webserver  |       timeout: 0,
webserver  |       xsrfCookieName: 'XSRF-TOKEN',
webserver  |       xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |       maxContentLength: -1,
webserver  |       maxBodyLength: -1,
webserver  |       env: [Object],
webserver  |       validateStatus: [Function: validateStatus],
webserver  |       headers: [Object [AxiosHeaders]],
webserver  |       method: 'post',
webserver  |       url: 'https://api.intra.42.fr/oauth/token',
webserver  |       data: '{"grant_type":"authorization_code","client_id":"u-s4t2ud-5a9d7a791c31267b140be75dcb88368fd21ecc552a388ba8a2a2e5320d82015d","client_secret":"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","code":"61958942f7b93aac44ee236b971245220c3bc20896e6f6bda20943f789b4af49","redirect_uri":"https://127.0.0.1:5500/"}'
webserver  |     },
webserver  |     request: <ref *1> ClientRequest {
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 7,
webserver  |       _maxListeners: undefined,
webserver  |       outputData: [],
webserver  |       outputSize: 0,
webserver  |       writable: true,
webserver  |       destroyed: true,
webserver  |       _last: false,
webserver  |       chunkedEncoding: false,
webserver  |       shouldKeepAlive: true,
webserver  |       maxRequestsOnConnectionReached: false,
webserver  |       _defaultKeepAlive: true,
webserver  |       useChunkedEncodingByDefault: true,
webserver  |       sendDate: false,
webserver  |       _removedConnection: false,
webserver  |       _removedContLen: false,
webserver  |       _removedTE: false,
webserver  |       strictContentLength: false,
webserver  |       _contentLength: '330',
webserver  |       _hasBody: true,
webserver  |       _trailer: '',
webserver  |       finished: true,
webserver  |       _headerSent: true,
webserver  |       _closed: true,
webserver  |       _header: 'POST /oauth/token HTTP/1.1\r\n' +
webserver  |         'Accept: application/json, text/plain, */*\r\n' +
webserver  |         'Content-Type: application/json\r\n' +
webserver  |         'User-Agent: axios/1.7.2\r\n' +
webserver  |         'Content-Length: 330\r\n' +
webserver  |         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |         'Host: api.intra.42.fr\r\n' +
webserver  |         'Connection: keep-alive\r\n' +
webserver  |         '\r\n',
webserver  |       _keepAliveTimeout: 0,
webserver  |       _onPendingData: [Function: nop],
webserver  |       agent: [Agent],
webserver  |       socketPath: undefined,
webserver  |       method: 'POST',
webserver  |       maxHeaderSize: undefined,
webserver  |       insecureHTTPParser: undefined,
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       path: '/oauth/token',
webserver  |       _ended: true,
webserver  |       res: [IncomingMessage],
webserver  |       aborted: false,
webserver  |       timeoutCb: null,
webserver  |       upgradeOrConnect: false,
webserver  |       parser: null,
webserver  |       maxHeadersCount: null,
webserver  |       reusedSocket: false,
webserver  |       host: 'api.intra.42.fr',
webserver  |       protocol: 'https:',
webserver  |       _redirectable: [Writable],
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(kNeedDrain)]: false,
webserver  |       [Symbol(corked)]: 0,
webserver  |       [Symbol(kChunkedBuffer)]: [],
webserver  |       [Symbol(kChunkedLength)]: 0,
webserver  |       [Symbol(kSocket)]: [TLSSocket],
webserver  |       [Symbol(kOutHeaders)]: [Object: null prototype],
webserver  |       [Symbol(errored)]: null,
webserver  |       [Symbol(kHighWaterMark)]: 65536,
webserver  |       [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |       [Symbol(kUniqueHeaders)]: null
webserver  |     },
webserver  |     data: {
webserver  |       error: 'invalid_grant',
webserver  |       error_description: 'The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client.'
webserver  |     }
webserver  |   }
webserver  | }
webserver  | AxiosError: Request failed with status code 400
webserver  |     at settle (/webServer/node_modules/axios/dist/node/axios.cjs:1983:12)
webserver  |     at IncomingMessage.handleStreamEnd (/webServer/node_modules/axios/dist/node/axios.cjs:3085:11)
webserver  |     at IncomingMessage.emit (node:events:532:35)
webserver  |     at endReadableNT (node:internal/streams/readable:1696:12)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
webserver  |     at Axios.request (/webServer/node_modules/axios/dist/node/axios.cjs:4224:41)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
webserver  |   code: 'ERR_BAD_REQUEST',
webserver  |   config: {
webserver  |     transitional: {
webserver  |       silentJSONParsing: true,
webserver  |       forcedJSONParsing: true,
webserver  |       clarifyTimeoutError: false
webserver  |     },
webserver  |     adapter: [ 'xhr', 'http', 'fetch' ],
webserver  |     transformRequest: [ [Function: transformRequest] ],
webserver  |     transformResponse: [ [Function: transformResponse] ],
webserver  |     timeout: 0,
webserver  |     xsrfCookieName: 'XSRF-TOKEN',
webserver  |     xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |     maxContentLength: -1,
webserver  |     maxBodyLength: -1,
webserver  |     env: { FormData: [Function], Blob: [class Blob] },
webserver  |     validateStatus: [Function: validateStatus],
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       Accept: 'application/json, text/plain, */*',
webserver  |       'Content-Type': 'application/json',
webserver  |       'User-Agent': 'axios/1.7.2',
webserver  |       'Content-Length': '2',
webserver  |       'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |     },
webserver  |     method: 'post',
webserver  |     url: 'https://backend:8000/api/v1/auth/login42',
webserver  |     data: '{}',
webserver  |     httpsAgent: Agent {
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 2,
webserver  |       _maxListeners: undefined,
webserver  |       defaultPort: 443,
webserver  |       protocol: 'https:',
webserver  |       options: [Object: null prototype],
webserver  |       requests: [Object: null prototype] {},
webserver  |       sockets: [Object: null prototype],
webserver  |       freeSockets: [Object: null prototype] {},
webserver  |       keepAliveMsecs: 1000,
webserver  |       keepAlive: false,
webserver  |       maxSockets: Infinity,
webserver  |       maxFreeSockets: 256,
webserver  |       scheduling: 'lifo',
webserver  |       maxTotalSockets: Infinity,
webserver  |       totalSocketCount: 1,
webserver  |       maxCachedSessions: 100,
webserver  |       _sessionCache: [Object],
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false
webserver  |     }
webserver  |   },
webserver  |   request: <ref *1> ClientRequest {
webserver  |     _events: [Object: null prototype] {
webserver  |       abort: [Function (anonymous)],
webserver  |       aborted: [Function (anonymous)],
webserver  |       connect: [Function (anonymous)],
webserver  |       error: [Function (anonymous)],
webserver  |       socket: [Function (anonymous)],
webserver  |       timeout: [Function (anonymous)],
webserver  |       finish: [Function: requestOnFinish]
webserver  |     },
webserver  |     _eventsCount: 7,
webserver  |     _maxListeners: undefined,
webserver  |     outputData: [],
webserver  |     outputSize: 0,
webserver  |     writable: true,
webserver  |     destroyed: false,
webserver  |     _last: true,
webserver  |     chunkedEncoding: false,
webserver  |     shouldKeepAlive: false,
webserver  |     maxRequestsOnConnectionReached: false,
webserver  |     _defaultKeepAlive: true,
webserver  |     useChunkedEncodingByDefault: true,
webserver  |     sendDate: false,
webserver  |     _removedConnection: false,
webserver  |     _removedContLen: false,
webserver  |     _removedTE: false,
webserver  |     strictContentLength: false,
webserver  |     _contentLength: '2',
webserver  |     _hasBody: true,
webserver  |     _trailer: '',
webserver  |     finished: true,
webserver  |     _headerSent: true,
webserver  |     _closed: false,
webserver  |     _header: 'POST /api/v1/auth/login42 HTTP/1.1\r\n' +
webserver  |       'Accept: application/json, text/plain, */*\r\n' +
webserver  |       'Content-Type: application/json\r\n' +
webserver  |       'User-Agent: axios/1.7.2\r\n' +
webserver  |       'Content-Length: 2\r\n' +
webserver  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |       'Host: backend:8000\r\n' +
webserver  |       'Connection: close\r\n' +
webserver  |       '\r\n',
webserver  |     _keepAliveTimeout: 0,
webserver  |     _onPendingData: [Function: nop],
webserver  |     agent: Agent {
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 2,
webserver  |       _maxListeners: undefined,
webserver  |       defaultPort: 443,
webserver  |       protocol: 'https:',
webserver  |       options: [Object: null prototype],
webserver  |       requests: [Object: null prototype] {},
webserver  |       sockets: [Object: null prototype],
webserver  |       freeSockets: [Object: null prototype] {},
webserver  |       keepAliveMsecs: 1000,
webserver  |       keepAlive: false,
webserver  |       maxSockets: Infinity,
webserver  |       maxFreeSockets: 256,
webserver  |       scheduling: 'lifo',
webserver  |       maxTotalSockets: Infinity,
webserver  |       totalSocketCount: 1,
webserver  |       maxCachedSessions: 100,
webserver  |       _sessionCache: [Object],
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     socketPath: undefined,
webserver  |     method: 'POST',
webserver  |     maxHeaderSize: undefined,
webserver  |     insecureHTTPParser: undefined,
webserver  |     joinDuplicateHeaders: undefined,
webserver  |     path: '/api/v1/auth/login42',
webserver  |     _ended: true,
webserver  |     res: IncomingMessage {
webserver  |       _events: [Object],
webserver  |       _readableState: [ReadableState],
webserver  |       _maxListeners: undefined,
webserver  |       socket: [TLSSocket],
webserver  |       httpVersionMajor: 1,
webserver  |       httpVersionMinor: 1,
webserver  |       httpVersion: '1.1',
webserver  |       complete: true,
webserver  |       rawHeaders: [Array],
webserver  |       rawTrailers: [],
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       aborted: false,
webserver  |       upgrade: false,
webserver  |       url: '',
webserver  |       method: null,
webserver  |       statusCode: 400,
webserver  |       statusMessage: 'Bad Request',
webserver  |       client: [TLSSocket],
webserver  |       _consuming: true,
webserver  |       _dumped: false,
webserver  |       req: [Circular *1],
webserver  |       _eventsCount: 4,
webserver  |       responseUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |       redirects: [],
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kHeaders)]: [Object],
webserver  |       [Symbol(kHeadersCount)]: 22,
webserver  |       [Symbol(kTrailers)]: null,
webserver  |       [Symbol(kTrailersCount)]: 0
webserver  |     },
webserver  |     aborted: false,
webserver  |     timeoutCb: null,
webserver  |     upgradeOrConnect: false,
webserver  |     parser: null,
webserver  |     maxHeadersCount: null,
webserver  |     reusedSocket: false,
webserver  |     host: 'backend',
webserver  |     protocol: 'https:',
webserver  |     _redirectable: Writable {
webserver  |       _events: [Object],
webserver  |       _writableState: [WritableState],
webserver  |       _maxListeners: undefined,
webserver  |       _options: [Object],
webserver  |       _ended: true,
webserver  |       _ending: true,
webserver  |       _redirectCount: 0,
webserver  |       _redirects: [],
webserver  |       _requestBodyLength: 2,
webserver  |       _requestBodyBuffers: [],
webserver  |       _eventsCount: 3,
webserver  |       _onNativeResponse: [Function (anonymous)],
webserver  |       _currentRequest: [Circular *1],
webserver  |       _currentUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     [Symbol(shapeMode)]: false,
webserver  |     [Symbol(kCapture)]: false,
webserver  |     [Symbol(kBytesWritten)]: 0,
webserver  |     [Symbol(kNeedDrain)]: false,
webserver  |     [Symbol(corked)]: 0,
webserver  |     [Symbol(kChunkedBuffer)]: [],
webserver  |     [Symbol(kChunkedLength)]: 0,
webserver  |     [Symbol(kSocket)]: TLSSocket {
webserver  |       _tlsOptions: [Object],
webserver  |       _secureEstablished: true,
webserver  |       _securePending: false,
webserver  |       _newSessionPending: false,
webserver  |       _controlReleased: true,
webserver  |       secureConnecting: false,
webserver  |       _SNICallback: null,
webserver  |       servername: 'backend',
webserver  |       alpnProtocol: false,
webserver  |       authorized: false,
webserver  |       authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |       encrypted: true,
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 10,
webserver  |       connecting: false,
webserver  |       _hadError: false,
webserver  |       _parent: null,
webserver  |       _host: 'backend',
webserver  |       _closeAfterHandlingError: false,
webserver  |       _readableState: [ReadableState],
webserver  |       _writableState: [WritableState],
webserver  |       allowHalfOpen: false,
webserver  |       _maxListeners: undefined,
webserver  |       _sockname: null,
webserver  |       _pendingData: null,
webserver  |       _pendingEncoding: '',
webserver  |       server: undefined,
webserver  |       _server: null,
webserver  |       ssl: [TLSWrap],
webserver  |       _requestCert: true,
webserver  |       _rejectUnauthorized: false,
webserver  |       parser: null,
webserver  |       _httpMessage: [Circular *1],
webserver  |       [Symbol(alpncallback)]: null,
webserver  |       [Symbol(res)]: [TLSWrap],
webserver  |       [Symbol(verified)]: true,
webserver  |       [Symbol(pendingSession)]: null,
webserver  |       [Symbol(async_id_symbol)]: 64,
webserver  |       [Symbol(kHandle)]: [TLSWrap],
webserver  |       [Symbol(lastWriteQueueSize)]: 0,
webserver  |       [Symbol(timeout)]: null,
webserver  |       [Symbol(kBuffer)]: null,
webserver  |       [Symbol(kBufferCb)]: null,
webserver  |       [Symbol(kBufferGen)]: null,
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kSetNoDelay)]: false,
webserver  |       [Symbol(kSetKeepAlive)]: true,
webserver  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |       [Symbol(kBytesRead)]: 0,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(connect-options)]: [Object]
webserver  |     },
webserver  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
webserver  |       accept: [Array],
webserver  |       'content-type': [Array],
webserver  |       'user-agent': [Array],
webserver  |       'content-length': [Array],
webserver  |       'accept-encoding': [Array],
webserver  |       host: [Array]
webserver  |     },
webserver  |     [Symbol(errored)]: null,
webserver  |     [Symbol(kHighWaterMark)]: 65536,
webserver  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |     [Symbol(kUniqueHeaders)]: null
webserver  |   },
webserver  |   response: {
webserver  |     status: 400,
webserver  |     statusText: 'Bad Request',
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       server: 'gunicorn',
webserver  |       date: 'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |       connection: 'close',
webserver  |       'content-type': 'application/json',
webserver  |       vary: 'Accept, origin',
webserver  |       allow: 'POST, OPTIONS',
webserver  |       'x-frame-options': 'DENY',
webserver  |       'content-length': '29',
webserver  |       'x-content-type-options': 'nosniff',
webserver  |       'referrer-policy': 'same-origin',
webserver  |       'cross-origin-opener-policy': 'same-origin'
webserver  |     },
webserver  |     config: {
webserver  |       transitional: [Object],
webserver  |       adapter: [Array],
webserver  |       transformRequest: [Array],
webserver  |       transformResponse: [Array],
webserver  |       timeout: 0,
webserver  |       xsrfCookieName: 'XSRF-TOKEN',
webserver  |       xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |       maxContentLength: -1,
webserver  |       maxBodyLength: -1,
webserver  |       env: [Object],
webserver  |       validateStatus: [Function: validateStatus],
webserver  |       headers: [Object [AxiosHeaders]],
webserver  |       method: 'post',
webserver  |       url: 'https://backend:8000/api/v1/auth/login42',
webserver  |       data: '{}',
webserver  |       httpsAgent: [Agent]
webserver  |     },
webserver  |     request: <ref *1> ClientRequest {
webserver  |       _events: [Object: null prototype],
webserver  |       _eventsCount: 7,
webserver  |       _maxListeners: undefined,
webserver  |       outputData: [],
webserver  |       outputSize: 0,
webserver  |       writable: true,
webserver  |       destroyed: false,
webserver  |       _last: true,
webserver  |       chunkedEncoding: false,
webserver  |       shouldKeepAlive: false,
webserver  |       maxRequestsOnConnectionReached: false,
webserver  |       _defaultKeepAlive: true,
webserver  |       useChunkedEncodingByDefault: true,
webserver  |       sendDate: false,
webserver  |       _removedConnection: false,
webserver  |       _removedContLen: false,
webserver  |       _removedTE: false,
webserver  |       strictContentLength: false,
webserver  |       _contentLength: '2',
webserver  |       _hasBody: true,
webserver  |       _trailer: '',
webserver  |       finished: true,
webserver  |       _headerSent: true,
webserver  |       _closed: false,
webserver  |       _header: 'POST /api/v1/auth/login42 HTTP/1.1\r\n' +
webserver  |         'Accept: application/json, text/plain, */*\r\n' +
webserver  |         'Content-Type: application/json\r\n' +
webserver  |         'User-Agent: axios/1.7.2\r\n' +
webserver  |         'Content-Length: 2\r\n' +
webserver  |         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |         'Host: backend:8000\r\n' +
webserver  |         'Connection: close\r\n' +
webserver  |         '\r\n',
webserver  |       _keepAliveTimeout: 0,
webserver  |       _onPendingData: [Function: nop],
webserver  |       agent: [Agent],
webserver  |       socketPath: undefined,
webserver  |       method: 'POST',
webserver  |       maxHeaderSize: undefined,
webserver  |       insecureHTTPParser: undefined,
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       path: '/api/v1/auth/login42',
webserver  |       _ended: true,
webserver  |       res: [IncomingMessage],
webserver  |       aborted: false,
webserver  |       timeoutCb: null,
webserver  |       upgradeOrConnect: false,
webserver  |       parser: null,
webserver  |       maxHeadersCount: null,
webserver  |       reusedSocket: false,
webserver  |       host: 'backend',
webserver  |       protocol: 'https:',
webserver  |       _redirectable: [Writable],
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(kNeedDrain)]: false,
webserver  |       [Symbol(corked)]: 0,
webserver  |       [Symbol(kChunkedBuffer)]: [],
webserver  |       [Symbol(kChunkedLength)]: 0,
webserver  |       [Symbol(kSocket)]: [TLSSocket],
webserver  |       [Symbol(kOutHeaders)]: [Object: null prototype],
webserver  |       [Symbol(errored)]: null,
webserver  |       [Symbol(kHighWaterMark)]: 65536,
webserver  |       [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |       [Symbol(kUniqueHeaders)]: null
webserver  |     },
webserver  |     data: { error: 'No token provided' }
webserver  |   }
webserver  | }
webserver  | 
webserver  | node:internal/process/promises:391
webserver  |     triggerUncaughtException(err, true /* fromPromise */);
webserver  |     ^
webserver  | AxiosError: Request failed with status code 400
webserver  |     at settle (/webServer/node_modules/axios/dist/node/axios.cjs:1983:12)
webserver  |     at IncomingMessage.handleStreamEnd (/webServer/node_modules/axios/dist/node/axios.cjs:3085:11)
webserver  |     at IncomingMessage.emit (node:events:532:35)
webserver  |     at endReadableNT (node:internal/streams/readable:1696:12)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
webserver  |     at Axios.request (/webServer/node_modules/axios/dist/node/axios.cjs:4224:41)
webserver  |     at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
webserver  |   code: 'ERR_BAD_REQUEST',
webserver  |   config: {
webserver  |     transitional: {
webserver  |       silentJSONParsing: true,
webserver  |       forcedJSONParsing: true,
webserver  |       clarifyTimeoutError: false
webserver  |     },
webserver  |     adapter: [ 'xhr', 'http', 'fetch' ],
webserver  |     transformRequest: [ [Function: transformRequest] ],
webserver  |     transformResponse: [ [Function: transformResponse] ],
webserver  |     timeout: 0,
webserver  |     xsrfCookieName: 'XSRF-TOKEN',
webserver  |     xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |     maxContentLength: -1,
webserver  |     maxBodyLength: -1,
webserver  |     env: {
webserver  |       FormData: [Function: FormData] {
webserver  |         LINE_BREAK: '\r\n',
webserver  |         DEFAULT_CONTENT_TYPE: 'application/octet-stream'
webserver  |       },
webserver  |       Blob: [class Blob]
webserver  |     },
webserver  |     validateStatus: [Function: validateStatus],
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       Accept: 'application/json, text/plain, */*',
webserver  |       'Content-Type': 'application/json',
webserver  |       'User-Agent': 'axios/1.7.2',
webserver  |       'Content-Length': '2',
webserver  |       'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |     },
webserver  |     method: 'post',
webserver  |     url: 'https://backend:8000/api/v1/auth/login42',
webserver  |     data: '{}',
webserver  |     httpsAgent: Agent {
webserver  |       _events: [Object: null prototype] {
webserver  |         free: [Function (anonymous)],
webserver  |         newListener: [Function: maybeEnableKeylog]
webserver  |       },
webserver  |       _eventsCount: 2,
webserver  |       _maxListeners: undefined,
webserver  |       defaultPort: 443,
webserver  |       protocol: 'https:',
webserver  |       options: [Object: null prototype] {
webserver  |         rejectUnauthorized: false,
webserver  |         noDelay: true,
webserver  |         path: null
webserver  |       },
webserver  |       requests: [Object: null prototype] {},
webserver  |       sockets: [Object: null prototype] {
webserver  |         'backend:8000::::::::false:::::::::::::': [
webserver  |           TLSSocket {
webserver  |             _tlsOptions: [Object],
webserver  |             _secureEstablished: true,
webserver  |             _securePending: false,
webserver  |             _newSessionPending: false,
webserver  |             _controlReleased: true,
webserver  |             secureConnecting: false,
webserver  |             _SNICallback: null,
webserver  |             servername: 'backend',
webserver  |             alpnProtocol: false,
webserver  |             authorized: false,
webserver  |             authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |             encrypted: true,
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 10,
webserver  |             connecting: false,
webserver  |             _hadError: false,
webserver  |             _parent: null,
webserver  |             _host: 'backend',
webserver  |             _closeAfterHandlingError: false,
webserver  |             _readableState: [ReadableState],
webserver  |             _writableState: [WritableState],
webserver  |             allowHalfOpen: false,
webserver  |             _maxListeners: undefined,
webserver  |             _sockname: null,
webserver  |             _pendingData: null,
webserver  |             _pendingEncoding: '',
webserver  |             server: undefined,
webserver  |             _server: null,
webserver  |             ssl: [TLSWrap],
webserver  |             _requestCert: true,
webserver  |             _rejectUnauthorized: false,
webserver  |             parser: null,
webserver  |             _httpMessage: [ClientRequest],
webserver  |             [Symbol(alpncallback)]: null,
webserver  |             [Symbol(res)]: [TLSWrap],
webserver  |             [Symbol(verified)]: true,
webserver  |             [Symbol(pendingSession)]: null,
webserver  |             [Symbol(async_id_symbol)]: 64,
webserver  |             [Symbol(kHandle)]: [TLSWrap],
webserver  |             [Symbol(lastWriteQueueSize)]: 0,
webserver  |             [Symbol(timeout)]: null,
webserver  |             [Symbol(kBuffer)]: null,
webserver  |             [Symbol(kBufferCb)]: null,
webserver  |             [Symbol(kBufferGen)]: null,
webserver  |             [Symbol(shapeMode)]: true,
webserver  |             [Symbol(kCapture)]: false,
webserver  |             [Symbol(kSetNoDelay)]: false,
webserver  |             [Symbol(kSetKeepAlive)]: true,
webserver  |             [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |             [Symbol(kBytesRead)]: 0,
webserver  |             [Symbol(kBytesWritten)]: 0,
webserver  |             [Symbol(connect-options)]: [Object]
webserver  |           }
webserver  |         ]
webserver  |       },
webserver  |       freeSockets: [Object: null prototype] {},
webserver  |       keepAliveMsecs: 1000,
webserver  |       keepAlive: false,
webserver  |       maxSockets: Infinity,
webserver  |       maxFreeSockets: 256,
webserver  |       scheduling: 'lifo',
webserver  |       maxTotalSockets: Infinity,
webserver  |       totalSocketCount: 1,
webserver  |       maxCachedSessions: 100,
webserver  |       _sessionCache: {
webserver  |         map: {
webserver  |           'backend:8000::::::::false:::::::::::::': Buffer(1270) [Uint8Array] [
webserver  |              48, 130,   4, 242,   2,   1,   1,   2,   2,   3,   4,   4,
webserver  |               2,  19,   2,   4,  32, 146, 210, 178,  41, 181,  84,  56,
webserver  |             233,  98, 185, 127, 253,  52,  79,   4,  86,  13, 226, 160,
webserver  |              97,  10,  82, 104, 121, 129,  49, 133, 176, 178,   5,  81,
webserver  |             169,   4,  48,   3, 206, 232,  88, 118, 180,  14,  10,  39,
webserver  |             106,  85, 217,  86,  46,  49, 119, 223,  21, 240, 105, 255,
webserver  |             232, 150, 212, 227, 234,  95, 214, 204, 194, 232,  55, 199,
webserver  |              95,  22,  50,  60, 237,  58,  57, 126, 251, 164,   7,  76,
webserver  |             148,  74, 119, 161,
webserver  |             ... 1170 more items
webserver  |           ]
webserver  |         },
webserver  |         list: [ 'backend:8000::::::::false:::::::::::::' ]
webserver  |       },
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false
webserver  |     }
webserver  |   },
webserver  |   request: <ref *1> ClientRequest {
webserver  |     _events: [Object: null prototype] {
webserver  |       abort: [Function (anonymous)],
webserver  |       aborted: [Function (anonymous)],
webserver  |       connect: [Function (anonymous)],
webserver  |       error: [Function (anonymous)],
webserver  |       socket: [Function (anonymous)],
webserver  |       timeout: [Function (anonymous)],
webserver  |       finish: [Function: requestOnFinish]
webserver  |     },
webserver  |     _eventsCount: 7,
webserver  |     _maxListeners: undefined,
webserver  |     outputData: [],
webserver  |     outputSize: 0,
webserver  |     writable: true,
webserver  |     destroyed: false,
webserver  |     _last: true,
webserver  |     chunkedEncoding: false,
webserver  |     shouldKeepAlive: false,
webserver  |     maxRequestsOnConnectionReached: false,
webserver  |     _defaultKeepAlive: true,
webserver  |     useChunkedEncodingByDefault: true,
webserver  |     sendDate: false,
webserver  |     _removedConnection: false,
webserver  |     _removedContLen: false,
webserver  |     _removedTE: false,
webserver  |     strictContentLength: false,
webserver  |     _contentLength: '2',
webserver  |     _hasBody: true,
webserver  |     _trailer: '',
webserver  |     finished: true,
webserver  |     _headerSent: true,
webserver  |     _closed: false,
webserver  |     _header: 'POST /api/v1/auth/login42 HTTP/1.1\r\n' +
webserver  |       'Accept: application/json, text/plain, */*\r\n' +
webserver  |       'Content-Type: application/json\r\n' +
webserver  |       'User-Agent: axios/1.7.2\r\n' +
webserver  |       'Content-Length: 2\r\n' +
webserver  |       'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |       'Host: backend:8000\r\n' +
webserver  |       'Connection: close\r\n' +
webserver  |       '\r\n',
webserver  |     _keepAliveTimeout: 0,
webserver  |     _onPendingData: [Function: nop],
webserver  |     agent: Agent {
webserver  |       _events: [Object: null prototype] {
webserver  |         free: [Function (anonymous)],
webserver  |         newListener: [Function: maybeEnableKeylog]
webserver  |       },
webserver  |       _eventsCount: 2,
webserver  |       _maxListeners: undefined,
webserver  |       defaultPort: 443,
webserver  |       protocol: 'https:',
webserver  |       options: [Object: null prototype] {
webserver  |         rejectUnauthorized: false,
webserver  |         noDelay: true,
webserver  |         path: null
webserver  |       },
webserver  |       requests: [Object: null prototype] {},
webserver  |       sockets: [Object: null prototype] {
webserver  |         'backend:8000::::::::false:::::::::::::': [
webserver  |           TLSSocket {
webserver  |             _tlsOptions: [Object],
webserver  |             _secureEstablished: true,
webserver  |             _securePending: false,
webserver  |             _newSessionPending: false,
webserver  |             _controlReleased: true,
webserver  |             secureConnecting: false,
webserver  |             _SNICallback: null,
webserver  |             servername: 'backend',
webserver  |             alpnProtocol: false,
webserver  |             authorized: false,
webserver  |             authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |             encrypted: true,
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 10,
webserver  |             connecting: false,
webserver  |             _hadError: false,
webserver  |             _parent: null,
webserver  |             _host: 'backend',
webserver  |             _closeAfterHandlingError: false,
webserver  |             _readableState: [ReadableState],
webserver  |             _writableState: [WritableState],
webserver  |             allowHalfOpen: false,
webserver  |             _maxListeners: undefined,
webserver  |             _sockname: null,
webserver  |             _pendingData: null,
webserver  |             _pendingEncoding: '',
webserver  |             server: undefined,
webserver  |             _server: null,
webserver  |             ssl: [TLSWrap],
webserver  |             _requestCert: true,
webserver  |             _rejectUnauthorized: false,
webserver  |             parser: null,
webserver  |             _httpMessage: [Circular *1],
webserver  |             [Symbol(alpncallback)]: null,
webserver  |             [Symbol(res)]: [TLSWrap],
webserver  |             [Symbol(verified)]: true,
webserver  |             [Symbol(pendingSession)]: null,
webserver  |             [Symbol(async_id_symbol)]: 64,
webserver  |             [Symbol(kHandle)]: [TLSWrap],
webserver  |             [Symbol(lastWriteQueueSize)]: 0,
webserver  |             [Symbol(timeout)]: null,
webserver  |             [Symbol(kBuffer)]: null,
webserver  |             [Symbol(kBufferCb)]: null,
webserver  |             [Symbol(kBufferGen)]: null,
webserver  |             [Symbol(shapeMode)]: true,
webserver  |             [Symbol(kCapture)]: false,
webserver  |             [Symbol(kSetNoDelay)]: false,
webserver  |             [Symbol(kSetKeepAlive)]: true,
webserver  |             [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |             [Symbol(kBytesRead)]: 0,
webserver  |             [Symbol(kBytesWritten)]: 0,
webserver  |             [Symbol(connect-options)]: [Object]
webserver  |           }
webserver  |         ]
webserver  |       },
webserver  |       freeSockets: [Object: null prototype] {},
webserver  |       keepAliveMsecs: 1000,
webserver  |       keepAlive: false,
webserver  |       maxSockets: Infinity,
webserver  |       maxFreeSockets: 256,
webserver  |       scheduling: 'lifo',
webserver  |       maxTotalSockets: Infinity,
webserver  |       totalSocketCount: 1,
webserver  |       maxCachedSessions: 100,
webserver  |       _sessionCache: {
webserver  |         map: {
webserver  |           'backend:8000::::::::false:::::::::::::': Buffer(1270) [Uint8Array] [
webserver  |              48, 130,   4, 242,   2,   1,   1,   2,   2,   3,   4,   4,
webserver  |               2,  19,   2,   4,  32, 146, 210, 178,  41, 181,  84,  56,
webserver  |             233,  98, 185, 127, 253,  52,  79,   4,  86,  13, 226, 160,
webserver  |              97,  10,  82, 104, 121, 129,  49, 133, 176, 178,   5,  81,
webserver  |             169,   4,  48,   3, 206, 232,  88, 118, 180,  14,  10,  39,
webserver  |             106,  85, 217,  86,  46,  49, 119, 223,  21, 240, 105, 255,
webserver  |             232, 150, 212, 227, 234,  95, 214, 204, 194, 232,  55, 199,
webserver  |              95,  22,  50,  60, 237,  58,  57, 126, 251, 164,   7,  76,
webserver  |             148,  74, 119, 161,
webserver  |             ... 1170 more items
webserver  |           ]
webserver  |         },
webserver  |         list: [ 'backend:8000::::::::false:::::::::::::' ]
webserver  |       },
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     socketPath: undefined,
webserver  |     method: 'POST',
webserver  |     maxHeaderSize: undefined,
webserver  |     insecureHTTPParser: undefined,
webserver  |     joinDuplicateHeaders: undefined,
webserver  |     path: '/api/v1/auth/login42',
webserver  |     _ended: true,
webserver  |     res: IncomingMessage {
webserver  |       _events: {
webserver  |         close: undefined,
webserver  |         error: [Function: handleStreamError],
webserver  |         data: [Function: handleStreamData],
webserver  |         end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
webserver  |         readable: undefined,
webserver  |         finish: undefined,
webserver  |         aborted: [Function: handlerStreamAborted]
webserver  |       },
webserver  |       _readableState: ReadableState {
webserver  |         highWaterMark: 65536,
webserver  |         buffer: [],
webserver  |         bufferIndex: 0,
webserver  |         length: 0,
webserver  |         pipes: [],
webserver  |         awaitDrainWriters: null,
webserver  |         [Symbol(kState)]: 194512764
webserver  |       },
webserver  |       _maxListeners: undefined,
webserver  |       socket: <ref *2> TLSSocket {
webserver  |         _tlsOptions: {
webserver  |           allowHalfOpen: undefined,
webserver  |           pipe: false,
webserver  |           secureContext: SecureContext { context: SecureContext {} },
webserver  |           isServer: false,
webserver  |           requestCert: true,
webserver  |           rejectUnauthorized: false,
webserver  |           session: undefined,
webserver  |           ALPNProtocols: undefined,
webserver  |           requestOCSP: undefined,
webserver  |           enableTrace: undefined,
webserver  |           pskCallback: undefined,
webserver  |           highWaterMark: undefined,
webserver  |           onread: undefined,
webserver  |           signal: undefined
webserver  |         },
webserver  |         _secureEstablished: true,
webserver  |         _securePending: false,
webserver  |         _newSessionPending: false,
webserver  |         _controlReleased: true,
webserver  |         secureConnecting: false,
webserver  |         _SNICallback: null,
webserver  |         servername: 'backend',
webserver  |         alpnProtocol: false,
webserver  |         authorized: false,
webserver  |         authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |         encrypted: true,
webserver  |         _events: [Object: null prototype] {
webserver  |           close: [
webserver  |             [Function: onSocketCloseDestroySSL],
webserver  |             [Function],
webserver  |             [Function: onClose],
webserver  |             [Function: socketCloseListener]
webserver  |           ],
webserver  |           end: [Function: onReadableStreamEnd],
webserver  |           error: [Function: socketErrorListener],
webserver  |           newListener: [Function: keylogNewListener],
webserver  |           connect: undefined,
webserver  |           secure: [Function: onConnectSecure],
webserver  |           session: [Function (anonymous)],
webserver  |           free: [Function: onFree],
webserver  |           timeout: [Function: onTimeout],
webserver  |           agentRemove: [Function: onRemove],
webserver  |           data: undefined,
webserver  |           drain: undefined,
webserver  |           finish: [Function: bound onceWrapper] {
webserver  |             listener: [Function (anonymous)]
webserver  |           }
webserver  |         },
webserver  |         _eventsCount: 10,
webserver  |         connecting: false,
webserver  |         _hadError: false,
webserver  |         _parent: null,
webserver  |         _host: 'backend',
webserver  |         _closeAfterHandlingError: false,
webserver  |         _readableState: ReadableState {
webserver  |           highWaterMark: 65536,
webserver  |           buffer: [],
webserver  |           bufferIndex: 0,
webserver  |           length: 0,
webserver  |           pipes: [],
webserver  |           awaitDrainWriters: null,
webserver  |           [Symbol(kState)]: 60303620
webserver  |         },
webserver  |         _writableState: WritableState {
webserver  |           highWaterMark: 65536,
webserver  |           length: 0,
webserver  |           corked: 0,
webserver  |           onwrite: [Function: bound onwrite],
webserver  |           writelen: 0,
webserver  |           bufferedIndex: 0,
webserver  |           pendingcb: 1,
webserver  |           [Symbol(kState)]: 1091310852,
webserver  |           [Symbol(kBufferedValue)]: null,
webserver  |           [Symbol(kWriteCbValue)]: null
webserver  |         },
webserver  |         allowHalfOpen: false,
webserver  |         _maxListeners: undefined,
webserver  |         _sockname: null,
webserver  |         _pendingData: null,
webserver  |         _pendingEncoding: '',
webserver  |         server: undefined,
webserver  |         _server: null,
webserver  |         ssl: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _requestCert: true,
webserver  |         _rejectUnauthorized: false,
webserver  |         parser: null,
webserver  |         _httpMessage: [Circular *1],
webserver  |         [Symbol(alpncallback)]: null,
webserver  |         [Symbol(res)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(verified)]: true,
webserver  |         [Symbol(pendingSession)]: null,
webserver  |         [Symbol(async_id_symbol)]: 64,
webserver  |         [Symbol(kHandle)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(lastWriteQueueSize)]: 0,
webserver  |         [Symbol(timeout)]: null,
webserver  |         [Symbol(kBuffer)]: null,
webserver  |         [Symbol(kBufferCb)]: null,
webserver  |         [Symbol(kBufferGen)]: null,
webserver  |         [Symbol(shapeMode)]: true,
webserver  |         [Symbol(kCapture)]: false,
webserver  |         [Symbol(kSetNoDelay)]: false,
webserver  |         [Symbol(kSetKeepAlive)]: true,
webserver  |         [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |         [Symbol(kBytesRead)]: 0,
webserver  |         [Symbol(kBytesWritten)]: 0,
webserver  |         [Symbol(connect-options)]: {
webserver  |           rejectUnauthorized: false,
webserver  |           ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |           checkServerIdentity: [Function: checkServerIdentity],
webserver  |           minDHSize: 1024,
webserver  |           maxRedirects: 21,
webserver  |           maxBodyLength: Infinity,
webserver  |           protocol: 'https:',
webserver  |           path: null,
webserver  |           method: 'POST',
webserver  |           headers: [Object: null prototype] {
webserver  |             Accept: 'application/json, text/plain, */*',
webserver  |             'Content-Type': 'application/json',
webserver  |             'User-Agent': 'axios/1.7.2',
webserver  |             'Content-Length': '2',
webserver  |             'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |           },
webserver  |           agents: { http: undefined, https: [Agent] },
webserver  |           auth: undefined,
webserver  |           family: undefined,
webserver  |           beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |           beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |           hostname: 'backend',
webserver  |           port: '8000',
webserver  |           agent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           nativeProtocols: { 'http:': [Object], 'https:': [Object] },
webserver  |           pathname: '/api/v1/auth/login42',
webserver  |           _defaultAgent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype] {},
webserver  |             freeSockets: [Object: null prototype],
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: true,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           host: 'backend',
webserver  |           noDelay: true,
webserver  |           servername: 'backend',
webserver  |           _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |           encoding: null,
webserver  |           singleUse: true
webserver  |         }
webserver  |       },
webserver  |       httpVersionMajor: 1,
webserver  |       httpVersionMinor: 1,
webserver  |       httpVersion: '1.1',
webserver  |       complete: true,
webserver  |       rawHeaders: [
webserver  |         'Server',
webserver  |         'gunicorn',
webserver  |         'Date',
webserver  |         'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |         'Connection',
webserver  |         'close',
webserver  |         'Content-Type',
webserver  |         'application/json',
webserver  |         'Vary',
webserver  |         'Accept, origin',
webserver  |         'Allow',
webserver  |         'POST, OPTIONS',
webserver  |         'X-Frame-Options',
webserver  |         'DENY',
webserver  |         'Content-Length',
webserver  |         '29',
webserver  |         'X-Content-Type-Options',
webserver  |         'nosniff',
webserver  |         'Referrer-Policy',
webserver  |         'same-origin',
webserver  |         'Cross-Origin-Opener-Policy',
webserver  |         'same-origin'
webserver  |       ],
webserver  |       rawTrailers: [],
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       aborted: false,
webserver  |       upgrade: false,
webserver  |       url: '',
webserver  |       method: null,
webserver  |       statusCode: 400,
webserver  |       statusMessage: 'Bad Request',
webserver  |       client: <ref *2> TLSSocket {
webserver  |         _tlsOptions: {
webserver  |           allowHalfOpen: undefined,
webserver  |           pipe: false,
webserver  |           secureContext: SecureContext { context: SecureContext {} },
webserver  |           isServer: false,
webserver  |           requestCert: true,
webserver  |           rejectUnauthorized: false,
webserver  |           session: undefined,
webserver  |           ALPNProtocols: undefined,
webserver  |           requestOCSP: undefined,
webserver  |           enableTrace: undefined,
webserver  |           pskCallback: undefined,
webserver  |           highWaterMark: undefined,
webserver  |           onread: undefined,
webserver  |           signal: undefined
webserver  |         },
webserver  |         _secureEstablished: true,
webserver  |         _securePending: false,
webserver  |         _newSessionPending: false,
webserver  |         _controlReleased: true,
webserver  |         secureConnecting: false,
webserver  |         _SNICallback: null,
webserver  |         servername: 'backend',
webserver  |         alpnProtocol: false,
webserver  |         authorized: false,
webserver  |         authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |         encrypted: true,
webserver  |         _events: [Object: null prototype] {
webserver  |           close: [
webserver  |             [Function: onSocketCloseDestroySSL],
webserver  |             [Function],
webserver  |             [Function: onClose],
webserver  |             [Function: socketCloseListener]
webserver  |           ],
webserver  |           end: [Function: onReadableStreamEnd],
webserver  |           error: [Function: socketErrorListener],
webserver  |           newListener: [Function: keylogNewListener],
webserver  |           connect: undefined,
webserver  |           secure: [Function: onConnectSecure],
webserver  |           session: [Function (anonymous)],
webserver  |           free: [Function: onFree],
webserver  |           timeout: [Function: onTimeout],
webserver  |           agentRemove: [Function: onRemove],
webserver  |           data: undefined,
webserver  |           drain: undefined,
webserver  |           finish: [Function: bound onceWrapper] {
webserver  |             listener: [Function (anonymous)]
webserver  |           }
webserver  |         },
webserver  |         _eventsCount: 10,
webserver  |         connecting: false,
webserver  |         _hadError: false,
webserver  |         _parent: null,
webserver  |         _host: 'backend',
webserver  |         _closeAfterHandlingError: false,
webserver  |         _readableState: ReadableState {
webserver  |           highWaterMark: 65536,
webserver  |           buffer: [],
webserver  |           bufferIndex: 0,
webserver  |           length: 0,
webserver  |           pipes: [],
webserver  |           awaitDrainWriters: null,
webserver  |           [Symbol(kState)]: 60303620
webserver  |         },
webserver  |         _writableState: WritableState {
webserver  |           highWaterMark: 65536,
webserver  |           length: 0,
webserver  |           corked: 0,
webserver  |           onwrite: [Function: bound onwrite],
webserver  |           writelen: 0,
webserver  |           bufferedIndex: 0,
webserver  |           pendingcb: 1,
webserver  |           [Symbol(kState)]: 1091310852,
webserver  |           [Symbol(kBufferedValue)]: null,
webserver  |           [Symbol(kWriteCbValue)]: null
webserver  |         },
webserver  |         allowHalfOpen: false,
webserver  |         _maxListeners: undefined,
webserver  |         _sockname: null,
webserver  |         _pendingData: null,
webserver  |         _pendingEncoding: '',
webserver  |         server: undefined,
webserver  |         _server: null,
webserver  |         ssl: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _requestCert: true,
webserver  |         _rejectUnauthorized: false,
webserver  |         parser: null,
webserver  |         _httpMessage: [Circular *1],
webserver  |         [Symbol(alpncallback)]: null,
webserver  |         [Symbol(res)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(verified)]: true,
webserver  |         [Symbol(pendingSession)]: null,
webserver  |         [Symbol(async_id_symbol)]: 64,
webserver  |         [Symbol(kHandle)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(lastWriteQueueSize)]: 0,
webserver  |         [Symbol(timeout)]: null,
webserver  |         [Symbol(kBuffer)]: null,
webserver  |         [Symbol(kBufferCb)]: null,
webserver  |         [Symbol(kBufferGen)]: null,
webserver  |         [Symbol(shapeMode)]: true,
webserver  |         [Symbol(kCapture)]: false,
webserver  |         [Symbol(kSetNoDelay)]: false,
webserver  |         [Symbol(kSetKeepAlive)]: true,
webserver  |         [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |         [Symbol(kBytesRead)]: 0,
webserver  |         [Symbol(kBytesWritten)]: 0,
webserver  |         [Symbol(connect-options)]: {
webserver  |           rejectUnauthorized: false,
webserver  |           ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |           checkServerIdentity: [Function: checkServerIdentity],
webserver  |           minDHSize: 1024,
webserver  |           maxRedirects: 21,
webserver  |           maxBodyLength: Infinity,
webserver  |           protocol: 'https:',
webserver  |           path: null,
webserver  |           method: 'POST',
webserver  |           headers: [Object: null prototype] {
webserver  |             Accept: 'application/json, text/plain, */*',
webserver  |             'Content-Type': 'application/json',
webserver  |             'User-Agent': 'axios/1.7.2',
webserver  |             'Content-Length': '2',
webserver  |             'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |           },
webserver  |           agents: { http: undefined, https: [Agent] },
webserver  |           auth: undefined,
webserver  |           family: undefined,
webserver  |           beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |           beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |           hostname: 'backend',
webserver  |           port: '8000',
webserver  |           agent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           nativeProtocols: { 'http:': [Object], 'https:': [Object] },
webserver  |           pathname: '/api/v1/auth/login42',
webserver  |           _defaultAgent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype] {},
webserver  |             freeSockets: [Object: null prototype],
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: true,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           host: 'backend',
webserver  |           noDelay: true,
webserver  |           servername: 'backend',
webserver  |           _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |           encoding: null,
webserver  |           singleUse: true
webserver  |         }
webserver  |       },
webserver  |       _consuming: true,
webserver  |       _dumped: false,
webserver  |       req: [Circular *1],
webserver  |       _eventsCount: 4,
webserver  |       responseUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |       redirects: [],
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kHeaders)]: {
webserver  |         server: 'gunicorn',
webserver  |         date: 'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |         connection: 'close',
webserver  |         'content-type': 'application/json',
webserver  |         vary: 'Accept, origin',
webserver  |         allow: 'POST, OPTIONS',
webserver  |         'x-frame-options': 'DENY',
webserver  |         'content-length': '29',
webserver  |         'x-content-type-options': 'nosniff',
webserver  |         'referrer-policy': 'same-origin',
webserver  |         'cross-origin-opener-policy': 'same-origin'
webserver  |       },
webserver  |       [Symbol(kHeadersCount)]: 22,
webserver  |       [Symbol(kTrailers)]: null,
webserver  |       [Symbol(kTrailersCount)]: 0
webserver  |     },
webserver  |     aborted: false,
webserver  |     timeoutCb: null,
webserver  |     upgradeOrConnect: false,
webserver  |     parser: null,
webserver  |     maxHeadersCount: null,
webserver  |     reusedSocket: false,
webserver  |     host: 'backend',
webserver  |     protocol: 'https:',
webserver  |     _redirectable: Writable {
webserver  |       _events: {
webserver  |         close: undefined,
webserver  |         error: [Function: handleRequestError],
webserver  |         prefinish: undefined,
webserver  |         finish: undefined,
webserver  |         drain: undefined,
webserver  |         response: [Function: handleResponse],
webserver  |         socket: [Function: handleRequestSocket]
webserver  |       },
webserver  |       _writableState: WritableState {
webserver  |         highWaterMark: 65536,
webserver  |         length: 0,
webserver  |         corked: 0,
webserver  |         onwrite: [Function: bound onwrite],
webserver  |         writelen: 0,
webserver  |         bufferedIndex: 0,
webserver  |         pendingcb: 0,
webserver  |         [Symbol(kState)]: 17580812,
webserver  |         [Symbol(kBufferedValue)]: null
webserver  |       },
webserver  |       _maxListeners: undefined,
webserver  |       _options: {
webserver  |         maxRedirects: 21,
webserver  |         maxBodyLength: Infinity,
webserver  |         protocol: 'https:',
webserver  |         path: '/api/v1/auth/login42',
webserver  |         method: 'POST',
webserver  |         headers: [Object: null prototype] {
webserver  |           Accept: 'application/json, text/plain, */*',
webserver  |           'Content-Type': 'application/json',
webserver  |           'User-Agent': 'axios/1.7.2',
webserver  |           'Content-Length': '2',
webserver  |           'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |         },
webserver  |         agents: {
webserver  |           http: undefined,
webserver  |           https: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           }
webserver  |         },
webserver  |         auth: undefined,
webserver  |         family: undefined,
webserver  |         beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |         beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |         hostname: 'backend',
webserver  |         port: '8000',
webserver  |         agent: Agent {
webserver  |           _events: [Object: null prototype] {
webserver  |             free: [Function (anonymous)],
webserver  |             newListener: [Function: maybeEnableKeylog]
webserver  |           },
webserver  |           _eventsCount: 2,
webserver  |           _maxListeners: undefined,
webserver  |           defaultPort: 443,
webserver  |           protocol: 'https:',
webserver  |           options: [Object: null prototype] {
webserver  |             rejectUnauthorized: false,
webserver  |             noDelay: true,
webserver  |             path: null
webserver  |           },
webserver  |           requests: [Object: null prototype] {},
webserver  |           sockets: [Object: null prototype] {
webserver  |             'backend:8000::::::::false:::::::::::::': [Array]
webserver  |           },
webserver  |           freeSockets: [Object: null prototype] {},
webserver  |           keepAliveMsecs: 1000,
webserver  |           keepAlive: false,
webserver  |           maxSockets: Infinity,
webserver  |           maxFreeSockets: 256,
webserver  |           scheduling: 'lifo',
webserver  |           maxTotalSockets: Infinity,
webserver  |           totalSocketCount: 1,
webserver  |           maxCachedSessions: 100,
webserver  |           _sessionCache: { map: [Object], list: [Array] },
webserver  |           [Symbol(shapeMode)]: false,
webserver  |           [Symbol(kCapture)]: false
webserver  |         },
webserver  |         nativeProtocols: {
webserver  |           'http:': {
webserver  |             _connectionListener: [Function: connectionListener],
webserver  |             METHODS: [Array],
webserver  |             STATUS_CODES: [Object],
webserver  |             Agent: [Function],
webserver  |             ClientRequest: [Function: ClientRequest],
webserver  |             IncomingMessage: [Function: IncomingMessage],
webserver  |             OutgoingMessage: [Function: OutgoingMessage],
webserver  |             Server: [Function: Server],
webserver  |             ServerResponse: [Function: ServerResponse],
webserver  |             createServer: [Function: createServer],
webserver  |             validateHeaderName: [Function],
webserver  |             validateHeaderValue: [Function],
webserver  |             get: [Function: get],
webserver  |             request: [Function: request],
webserver  |             setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
webserver  |             maxHeaderSize: [Getter],
webserver  |             globalAgent: [Getter/Setter]
webserver  |           },
webserver  |           'https:': {
webserver  |             Agent: [Function: Agent],
webserver  |             globalAgent: [Agent],
webserver  |             Server: [Function: Server],
webserver  |             createServer: [Function: createServer],
webserver  |             get: [Function: get],
webserver  |             request: [Function: request]
webserver  |           }
webserver  |         },
webserver  |         pathname: '/api/v1/auth/login42'
webserver  |       },
webserver  |       _ended: true,
webserver  |       _ending: true,
webserver  |       _redirectCount: 0,
webserver  |       _redirects: [],
webserver  |       _requestBodyLength: 2,
webserver  |       _requestBodyBuffers: [],
webserver  |       _eventsCount: 3,
webserver  |       _onNativeResponse: [Function (anonymous)],
webserver  |       _currentRequest: [Circular *1],
webserver  |       _currentUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false
webserver  |     },
webserver  |     [Symbol(shapeMode)]: false,
webserver  |     [Symbol(kCapture)]: false,
webserver  |     [Symbol(kBytesWritten)]: 0,
webserver  |     [Symbol(kNeedDrain)]: false,
webserver  |     [Symbol(corked)]: 0,
webserver  |     [Symbol(kChunkedBuffer)]: [],
webserver  |     [Symbol(kChunkedLength)]: 0,
webserver  |     [Symbol(kSocket)]: <ref *2> TLSSocket {
webserver  |       _tlsOptions: {
webserver  |         allowHalfOpen: undefined,
webserver  |         pipe: false,
webserver  |         secureContext: SecureContext { context: SecureContext {} },
webserver  |         isServer: false,
webserver  |         requestCert: true,
webserver  |         rejectUnauthorized: false,
webserver  |         session: undefined,
webserver  |         ALPNProtocols: undefined,
webserver  |         requestOCSP: undefined,
webserver  |         enableTrace: undefined,
webserver  |         pskCallback: undefined,
webserver  |         highWaterMark: undefined,
webserver  |         onread: undefined,
webserver  |         signal: undefined
webserver  |       },
webserver  |       _secureEstablished: true,
webserver  |       _securePending: false,
webserver  |       _newSessionPending: false,
webserver  |       _controlReleased: true,
webserver  |       secureConnecting: false,
webserver  |       _SNICallback: null,
webserver  |       servername: 'backend',
webserver  |       alpnProtocol: false,
webserver  |       authorized: false,
webserver  |       authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |       encrypted: true,
webserver  |       _events: [Object: null prototype] {
webserver  |         close: [
webserver  |           [Function: onSocketCloseDestroySSL],
webserver  |           [Function: bound onceWrapper] {
webserver  |             listener: [Function (anonymous)]
webserver  |           },
webserver  |           [Function: onClose],
webserver  |           [Function: socketCloseListener]
webserver  |         ],
webserver  |         end: [Function: onReadableStreamEnd],
webserver  |         error: [Function: socketErrorListener],
webserver  |         newListener: [Function: keylogNewListener],
webserver  |         connect: undefined,
webserver  |         secure: [Function: onConnectSecure],
webserver  |         session: [Function (anonymous)],
webserver  |         free: [Function: onFree],
webserver  |         timeout: [Function: onTimeout],
webserver  |         agentRemove: [Function: onRemove],
webserver  |         data: undefined,
webserver  |         drain: undefined,
webserver  |         finish: [Function: bound onceWrapper] {
webserver  |           listener: [Function (anonymous)]
webserver  |         }
webserver  |       },
webserver  |       _eventsCount: 10,
webserver  |       connecting: false,
webserver  |       _hadError: false,
webserver  |       _parent: null,
webserver  |       _host: 'backend',
webserver  |       _closeAfterHandlingError: false,
webserver  |       _readableState: ReadableState {
webserver  |         highWaterMark: 65536,
webserver  |         buffer: [],
webserver  |         bufferIndex: 0,
webserver  |         length: 0,
webserver  |         pipes: [],
webserver  |         awaitDrainWriters: null,
webserver  |         [Symbol(kState)]: 60303620
webserver  |       },
webserver  |       _writableState: WritableState {
webserver  |         highWaterMark: 65536,
webserver  |         length: 0,
webserver  |         corked: 0,
webserver  |         onwrite: [Function: bound onwrite],
webserver  |         writelen: 0,
webserver  |         bufferedIndex: 0,
webserver  |         pendingcb: 1,
webserver  |         [Symbol(kState)]: 1091310852,
webserver  |         [Symbol(kBufferedValue)]: null,
webserver  |         [Symbol(kWriteCbValue)]: null
webserver  |       },
webserver  |       allowHalfOpen: false,
webserver  |       _maxListeners: undefined,
webserver  |       _sockname: null,
webserver  |       _pendingData: null,
webserver  |       _pendingEncoding: '',
webserver  |       server: undefined,
webserver  |       _server: null,
webserver  |       ssl: TLSWrap {
webserver  |         _parent: TCP {
webserver  |           reading: [Getter/Setter],
webserver  |           onconnection: null,
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _parentWrap: null,
webserver  |         _secureContext: SecureContext { context: SecureContext {} },
webserver  |         reading: true,
webserver  |         onkeylog: [Function: onkeylog],
webserver  |         onhandshakestart: {},
webserver  |         onhandshakedone: [Function (anonymous)],
webserver  |         onocspresponse: [Function: onocspresponse],
webserver  |         onnewsession: [Function: onnewsessionclient],
webserver  |         onerror: [Function: onerror],
webserver  |         [Symbol(owner_symbol)]: [Circular *2]
webserver  |       },
webserver  |       _requestCert: true,
webserver  |       _rejectUnauthorized: false,
webserver  |       parser: null,
webserver  |       _httpMessage: [Circular *1],
webserver  |       [Symbol(alpncallback)]: null,
webserver  |       [Symbol(res)]: TLSWrap {
webserver  |         _parent: TCP {
webserver  |           reading: [Getter/Setter],
webserver  |           onconnection: null,
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _parentWrap: null,
webserver  |         _secureContext: SecureContext { context: SecureContext {} },
webserver  |         reading: true,
webserver  |         onkeylog: [Function: onkeylog],
webserver  |         onhandshakestart: {},
webserver  |         onhandshakedone: [Function (anonymous)],
webserver  |         onocspresponse: [Function: onocspresponse],
webserver  |         onnewsession: [Function: onnewsessionclient],
webserver  |         onerror: [Function: onerror],
webserver  |         [Symbol(owner_symbol)]: [Circular *2]
webserver  |       },
webserver  |       [Symbol(verified)]: true,
webserver  |       [Symbol(pendingSession)]: null,
webserver  |       [Symbol(async_id_symbol)]: 64,
webserver  |       [Symbol(kHandle)]: TLSWrap {
webserver  |         _parent: TCP {
webserver  |           reading: [Getter/Setter],
webserver  |           onconnection: null,
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _parentWrap: null,
webserver  |         _secureContext: SecureContext { context: SecureContext {} },
webserver  |         reading: true,
webserver  |         onkeylog: [Function: onkeylog],
webserver  |         onhandshakestart: {},
webserver  |         onhandshakedone: [Function (anonymous)],
webserver  |         onocspresponse: [Function: onocspresponse],
webserver  |         onnewsession: [Function: onnewsessionclient],
webserver  |         onerror: [Function: onerror],
webserver  |         [Symbol(owner_symbol)]: [Circular *2]
webserver  |       },
webserver  |       [Symbol(lastWriteQueueSize)]: 0,
webserver  |       [Symbol(timeout)]: null,
webserver  |       [Symbol(kBuffer)]: null,
webserver  |       [Symbol(kBufferCb)]: null,
webserver  |       [Symbol(kBufferGen)]: null,
webserver  |       [Symbol(shapeMode)]: true,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kSetNoDelay)]: false,
webserver  |       [Symbol(kSetKeepAlive)]: true,
webserver  |       [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |       [Symbol(kBytesRead)]: 0,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(connect-options)]: {
webserver  |         rejectUnauthorized: false,
webserver  |         ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |         checkServerIdentity: [Function: checkServerIdentity],
webserver  |         minDHSize: 1024,
webserver  |         maxRedirects: 21,
webserver  |         maxBodyLength: Infinity,
webserver  |         protocol: 'https:',
webserver  |         path: null,
webserver  |         method: 'POST',
webserver  |         headers: [Object: null prototype] {
webserver  |           Accept: 'application/json, text/plain, */*',
webserver  |           'Content-Type': 'application/json',
webserver  |           'User-Agent': 'axios/1.7.2',
webserver  |           'Content-Length': '2',
webserver  |           'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |         },
webserver  |         agents: {
webserver  |           http: undefined,
webserver  |           https: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           }
webserver  |         },
webserver  |         auth: undefined,
webserver  |         family: undefined,
webserver  |         beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |         beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |         hostname: 'backend',
webserver  |         port: '8000',
webserver  |         agent: Agent {
webserver  |           _events: [Object: null prototype] {
webserver  |             free: [Function (anonymous)],
webserver  |             newListener: [Function: maybeEnableKeylog]
webserver  |           },
webserver  |           _eventsCount: 2,
webserver  |           _maxListeners: undefined,
webserver  |           defaultPort: 443,
webserver  |           protocol: 'https:',
webserver  |           options: [Object: null prototype] {
webserver  |             rejectUnauthorized: false,
webserver  |             noDelay: true,
webserver  |             path: null
webserver  |           },
webserver  |           requests: [Object: null prototype] {},
webserver  |           sockets: [Object: null prototype] {
webserver  |             'backend:8000::::::::false:::::::::::::': [Array]
webserver  |           },
webserver  |           freeSockets: [Object: null prototype] {},
webserver  |           keepAliveMsecs: 1000,
webserver  |           keepAlive: false,
webserver  |           maxSockets: Infinity,
webserver  |           maxFreeSockets: 256,
webserver  |           scheduling: 'lifo',
webserver  |           maxTotalSockets: Infinity,
webserver  |           totalSocketCount: 1,
webserver  |           maxCachedSessions: 100,
webserver  |           _sessionCache: { map: [Object], list: [Array] },
webserver  |           [Symbol(shapeMode)]: false,
webserver  |           [Symbol(kCapture)]: false
webserver  |         },
webserver  |         nativeProtocols: {
webserver  |           'http:': {
webserver  |             _connectionListener: [Function: connectionListener],
webserver  |             METHODS: [Array],
webserver  |             STATUS_CODES: [Object],
webserver  |             Agent: [Function],
webserver  |             ClientRequest: [Function: ClientRequest],
webserver  |             IncomingMessage: [Function: IncomingMessage],
webserver  |             OutgoingMessage: [Function: OutgoingMessage],
webserver  |             Server: [Function: Server],
webserver  |             ServerResponse: [Function: ServerResponse],
webserver  |             createServer: [Function: createServer],
webserver  |             validateHeaderName: [Function],
webserver  |             validateHeaderValue: [Function],
webserver  |             get: [Function: get],
webserver  |             request: [Function: request],
webserver  |             setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
webserver  |             maxHeaderSize: [Getter],
webserver  |             globalAgent: [Getter/Setter]
webserver  |           },
webserver  |           'https:': {
webserver  |             Agent: [Function: Agent],
webserver  |             globalAgent: [Agent],
webserver  |             Server: [Function: Server],
webserver  |             createServer: [Function: createServer],
webserver  |             get: [Function: get],
webserver  |             request: [Function: request]
webserver  |           }
webserver  |         },
webserver  |         pathname: '/api/v1/auth/login42',
webserver  |         _defaultAgent: Agent {
webserver  |           _events: [Object: null prototype] {
webserver  |             free: [Function (anonymous)],
webserver  |             newListener: [Function: maybeEnableKeylog]
webserver  |           },
webserver  |           _eventsCount: 2,
webserver  |           _maxListeners: undefined,
webserver  |           defaultPort: 443,
webserver  |           protocol: 'https:',
webserver  |           options: [Object: null prototype] {
webserver  |             keepAlive: true,
webserver  |             scheduling: 'lifo',
webserver  |             timeout: 5000,
webserver  |             noDelay: true,
webserver  |             path: null
webserver  |           },
webserver  |           requests: [Object: null prototype] {},
webserver  |           sockets: [Object: null prototype] {},
webserver  |           freeSockets: [Object: null prototype] {
webserver  |             'api.intra.42.fr:443:::::::::::::::::::::': [Array]
webserver  |           },
webserver  |           keepAliveMsecs: 1000,
webserver  |           keepAlive: true,
webserver  |           maxSockets: Infinity,
webserver  |           maxFreeSockets: 256,
webserver  |           scheduling: 'lifo',
webserver  |           maxTotalSockets: Infinity,
webserver  |           totalSocketCount: 1,
webserver  |           maxCachedSessions: 100,
webserver  |           _sessionCache: { map: [Object], list: [Array] },
webserver  |           [Symbol(shapeMode)]: false,
webserver  |           [Symbol(kCapture)]: false
webserver  |         },
webserver  |         host: 'backend',
webserver  |         noDelay: true,
webserver  |         servername: 'backend',
webserver  |         _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |         encoding: null,
webserver  |         singleUse: true
webserver  |       }
webserver  |     },
webserver  |     [Symbol(kOutHeaders)]: [Object: null prototype] {
webserver  |       accept: [ 'Accept', 'application/json, text/plain, */*' ],
webserver  |       'content-type': [ 'Content-Type', 'application/json' ],
webserver  |       'user-agent': [ 'User-Agent', 'axios/1.7.2' ],
webserver  |       'content-length': [ 'Content-Length', '2' ],
webserver  |       'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
webserver  |       host: [ 'Host', 'backend:8000' ]
webserver  |     },
webserver  |     [Symbol(errored)]: null,
webserver  |     [Symbol(kHighWaterMark)]: 65536,
webserver  |     [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |     [Symbol(kUniqueHeaders)]: null
webserver  |   },
webserver  |   response: {
webserver  |     status: 400,
webserver  |     statusText: 'Bad Request',
webserver  |     headers: Object [AxiosHeaders] {
webserver  |       server: 'gunicorn',
webserver  |       date: 'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |       connection: 'close',
webserver  |       'content-type': 'application/json',
webserver  |       vary: 'Accept, origin',
webserver  |       allow: 'POST, OPTIONS',
webserver  |       'x-frame-options': 'DENY',
webserver  |       'content-length': '29',
webserver  |       'x-content-type-options': 'nosniff',
webserver  |       'referrer-policy': 'same-origin',
webserver  |       'cross-origin-opener-policy': 'same-origin'
webserver  |     },
webserver  |     config: {
webserver  |       transitional: {
webserver  |         silentJSONParsing: true,
webserver  |         forcedJSONParsing: true,
webserver  |         clarifyTimeoutError: false
webserver  |       },
webserver  |       adapter: [ 'xhr', 'http', 'fetch' ],
webserver  |       transformRequest: [ [Function: transformRequest] ],
webserver  |       transformResponse: [ [Function: transformResponse] ],
webserver  |       timeout: 0,
webserver  |       xsrfCookieName: 'XSRF-TOKEN',
webserver  |       xsrfHeaderName: 'X-XSRF-TOKEN',
webserver  |       maxContentLength: -1,
webserver  |       maxBodyLength: -1,
webserver  |       env: {
webserver  |         FormData: [Function: FormData] {
webserver  |           LINE_BREAK: '\r\n',
webserver  |           DEFAULT_CONTENT_TYPE: 'application/octet-stream'
webserver  |         },
webserver  |         Blob: [class Blob]
webserver  |       },
webserver  |       validateStatus: [Function: validateStatus],
webserver  |       headers: Object [AxiosHeaders] {
webserver  |         Accept: 'application/json, text/plain, */*',
webserver  |         'Content-Type': 'application/json',
webserver  |         'User-Agent': 'axios/1.7.2',
webserver  |         'Content-Length': '2',
webserver  |         'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |       },
webserver  |       method: 'post',
webserver  |       url: 'https://backend:8000/api/v1/auth/login42',
webserver  |       data: '{}',
webserver  |       httpsAgent: Agent {
webserver  |         _events: [Object: null prototype] {
webserver  |           free: [Function (anonymous)],
webserver  |           newListener: [Function: maybeEnableKeylog]
webserver  |         },
webserver  |         _eventsCount: 2,
webserver  |         _maxListeners: undefined,
webserver  |         defaultPort: 443,
webserver  |         protocol: 'https:',
webserver  |         options: [Object: null prototype] {
webserver  |           rejectUnauthorized: false,
webserver  |           noDelay: true,
webserver  |           path: null
webserver  |         },
webserver  |         requests: [Object: null prototype] {},
webserver  |         sockets: [Object: null prototype] {
webserver  |           'backend:8000::::::::false:::::::::::::': [ [TLSSocket] ]
webserver  |         },
webserver  |         freeSockets: [Object: null prototype] {},
webserver  |         keepAliveMsecs: 1000,
webserver  |         keepAlive: false,
webserver  |         maxSockets: Infinity,
webserver  |         maxFreeSockets: 256,
webserver  |         scheduling: 'lifo',
webserver  |         maxTotalSockets: Infinity,
webserver  |         totalSocketCount: 1,
webserver  |         maxCachedSessions: 100,
webserver  |         _sessionCache: {
webserver  |           map: {
webserver  |             'backend:8000::::::::false:::::::::::::': [Buffer [Uint8Array]]
webserver  |           },
webserver  |           list: [ 'backend:8000::::::::false:::::::::::::' ]
webserver  |         },
webserver  |         [Symbol(shapeMode)]: false,
webserver  |         [Symbol(kCapture)]: false
webserver  |       }
webserver  |     },
webserver  |     request: <ref *1> ClientRequest {
webserver  |       _events: [Object: null prototype] {
webserver  |         abort: [Function (anonymous)],
webserver  |         aborted: [Function (anonymous)],
webserver  |         connect: [Function (anonymous)],
webserver  |         error: [Function (anonymous)],
webserver  |         socket: [Function (anonymous)],
webserver  |         timeout: [Function (anonymous)],
webserver  |         finish: [Function: requestOnFinish]
webserver  |       },
webserver  |       _eventsCount: 7,
webserver  |       _maxListeners: undefined,
webserver  |       outputData: [],
webserver  |       outputSize: 0,
webserver  |       writable: true,
webserver  |       destroyed: false,
webserver  |       _last: true,
webserver  |       chunkedEncoding: false,
webserver  |       shouldKeepAlive: false,
webserver  |       maxRequestsOnConnectionReached: false,
webserver  |       _defaultKeepAlive: true,
webserver  |       useChunkedEncodingByDefault: true,
webserver  |       sendDate: false,
webserver  |       _removedConnection: false,
webserver  |       _removedContLen: false,
webserver  |       _removedTE: false,
webserver  |       strictContentLength: false,
webserver  |       _contentLength: '2',
webserver  |       _hasBody: true,
webserver  |       _trailer: '',
webserver  |       finished: true,
webserver  |       _headerSent: true,
webserver  |       _closed: false,
webserver  |       _header: 'POST /api/v1/auth/login42 HTTP/1.1\r\n' +
webserver  |         'Accept: application/json, text/plain, */*\r\n' +
webserver  |         'Content-Type: application/json\r\n' +
webserver  |         'User-Agent: axios/1.7.2\r\n' +
webserver  |         'Content-Length: 2\r\n' +
webserver  |         'Accept-Encoding: gzip, compress, deflate, br\r\n' +
webserver  |         'Host: backend:8000\r\n' +
webserver  |         'Connection: close\r\n' +
webserver  |         '\r\n',
webserver  |       _keepAliveTimeout: 0,
webserver  |       _onPendingData: [Function: nop],
webserver  |       agent: Agent {
webserver  |         _events: [Object: null prototype] {
webserver  |           free: [Function (anonymous)],
webserver  |           newListener: [Function: maybeEnableKeylog]
webserver  |         },
webserver  |         _eventsCount: 2,
webserver  |         _maxListeners: undefined,
webserver  |         defaultPort: 443,
webserver  |         protocol: 'https:',
webserver  |         options: [Object: null prototype] {
webserver  |           rejectUnauthorized: false,
webserver  |           noDelay: true,
webserver  |           path: null
webserver  |         },
webserver  |         requests: [Object: null prototype] {},
webserver  |         sockets: [Object: null prototype] {
webserver  |           'backend:8000::::::::false:::::::::::::': [ [TLSSocket] ]
webserver  |         },
webserver  |         freeSockets: [Object: null prototype] {},
webserver  |         keepAliveMsecs: 1000,
webserver  |         keepAlive: false,
webserver  |         maxSockets: Infinity,
webserver  |         maxFreeSockets: 256,
webserver  |         scheduling: 'lifo',
webserver  |         maxTotalSockets: Infinity,
webserver  |         totalSocketCount: 1,
webserver  |         maxCachedSessions: 100,
webserver  |         _sessionCache: {
webserver  |           map: {
webserver  |             'backend:8000::::::::false:::::::::::::': [Buffer [Uint8Array]]
webserver  |           },
webserver  |           list: [ 'backend:8000::::::::false:::::::::::::' ]
webserver  |         },
webserver  |         [Symbol(shapeMode)]: false,
webserver  |         [Symbol(kCapture)]: false
webserver  |       },
webserver  |       socketPath: undefined,
webserver  |       method: 'POST',
webserver  |       maxHeaderSize: undefined,
webserver  |       insecureHTTPParser: undefined,
webserver  |       joinDuplicateHeaders: undefined,
webserver  |       path: '/api/v1/auth/login42',
webserver  |       _ended: true,
webserver  |       res: IncomingMessage {
webserver  |         _events: {
webserver  |           close: undefined,
webserver  |           error: [Function: handleStreamError],
webserver  |           data: [Function: handleStreamData],
webserver  |           end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
webserver  |           readable: undefined,
webserver  |           finish: undefined,
webserver  |           aborted: [Function: handlerStreamAborted]
webserver  |         },
webserver  |         _readableState: ReadableState {
webserver  |           highWaterMark: 65536,
webserver  |           buffer: [],
webserver  |           bufferIndex: 0,
webserver  |           length: 0,
webserver  |           pipes: [],
webserver  |           awaitDrainWriters: null,
webserver  |           [Symbol(kState)]: 194512764
webserver  |         },
webserver  |         _maxListeners: undefined,
webserver  |         socket: <ref *2> TLSSocket {
webserver  |           _tlsOptions: {
webserver  |             allowHalfOpen: undefined,
webserver  |             pipe: false,
webserver  |             secureContext: [SecureContext],
webserver  |             isServer: false,
webserver  |             requestCert: true,
webserver  |             rejectUnauthorized: false,
webserver  |             session: undefined,
webserver  |             ALPNProtocols: undefined,
webserver  |             requestOCSP: undefined,
webserver  |             enableTrace: undefined,
webserver  |             pskCallback: undefined,
webserver  |             highWaterMark: undefined,
webserver  |             onread: undefined,
webserver  |             signal: undefined
webserver  |           },
webserver  |           _secureEstablished: true,
webserver  |           _securePending: false,
webserver  |           _newSessionPending: false,
webserver  |           _controlReleased: true,
webserver  |           secureConnecting: false,
webserver  |           _SNICallback: null,
webserver  |           servername: 'backend',
webserver  |           alpnProtocol: false,
webserver  |           authorized: false,
webserver  |           authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |           encrypted: true,
webserver  |           _events: [Object: null prototype] {
webserver  |             close: [Array],
webserver  |             end: [Function: onReadableStreamEnd],
webserver  |             error: [Function: socketErrorListener],
webserver  |             newListener: [Function: keylogNewListener],
webserver  |             connect: undefined,
webserver  |             secure: [Function: onConnectSecure],
webserver  |             session: [Function (anonymous)],
webserver  |             free: [Function: onFree],
webserver  |             timeout: [Function: onTimeout],
webserver  |             agentRemove: [Function: onRemove],
webserver  |             data: undefined,
webserver  |             drain: undefined,
webserver  |             finish: [Function]
webserver  |           },
webserver  |           _eventsCount: 10,
webserver  |           connecting: false,
webserver  |           _hadError: false,
webserver  |           _parent: null,
webserver  |           _host: 'backend',
webserver  |           _closeAfterHandlingError: false,
webserver  |           _readableState: ReadableState {
webserver  |             highWaterMark: 65536,
webserver  |             buffer: [],
webserver  |             bufferIndex: 0,
webserver  |             length: 0,
webserver  |             pipes: [],
webserver  |             awaitDrainWriters: null,
webserver  |             [Symbol(kState)]: 60303620
webserver  |           },
webserver  |           _writableState: WritableState {
webserver  |             highWaterMark: 65536,
webserver  |             length: 0,
webserver  |             corked: 0,
webserver  |             onwrite: [Function: bound onwrite],
webserver  |             writelen: 0,
webserver  |             bufferedIndex: 0,
webserver  |             pendingcb: 1,
webserver  |             [Symbol(kState)]: 1091310852,
webserver  |             [Symbol(kBufferedValue)]: null,
webserver  |             [Symbol(kWriteCbValue)]: null
webserver  |           },
webserver  |           allowHalfOpen: false,
webserver  |           _maxListeners: undefined,
webserver  |           _sockname: null,
webserver  |           _pendingData: null,
webserver  |           _pendingEncoding: '',
webserver  |           server: undefined,
webserver  |           _server: null,
webserver  |           ssl: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _requestCert: true,
webserver  |           _rejectUnauthorized: false,
webserver  |           parser: null,
webserver  |           _httpMessage: [Circular *1],
webserver  |           [Symbol(alpncallback)]: null,
webserver  |           [Symbol(res)]: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           [Symbol(verified)]: true,
webserver  |           [Symbol(pendingSession)]: null,
webserver  |           [Symbol(async_id_symbol)]: 64,
webserver  |           [Symbol(kHandle)]: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           [Symbol(lastWriteQueueSize)]: 0,
webserver  |           [Symbol(timeout)]: null,
webserver  |           [Symbol(kBuffer)]: null,
webserver  |           [Symbol(kBufferCb)]: null,
webserver  |           [Symbol(kBufferGen)]: null,
webserver  |           [Symbol(shapeMode)]: true,
webserver  |           [Symbol(kCapture)]: false,
webserver  |           [Symbol(kSetNoDelay)]: false,
webserver  |           [Symbol(kSetKeepAlive)]: true,
webserver  |           [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |           [Symbol(kBytesRead)]: 0,
webserver  |           [Symbol(kBytesWritten)]: 0,
webserver  |           [Symbol(connect-options)]: {
webserver  |             rejectUnauthorized: false,
webserver  |             ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |             checkServerIdentity: [Function: checkServerIdentity],
webserver  |             minDHSize: 1024,
webserver  |             maxRedirects: 21,
webserver  |             maxBodyLength: Infinity,
webserver  |             protocol: 'https:',
webserver  |             path: null,
webserver  |             method: 'POST',
webserver  |             headers: [Object: null prototype],
webserver  |             agents: [Object],
webserver  |             auth: undefined,
webserver  |             family: undefined,
webserver  |             beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |             beforeRedirects: [Object],
webserver  |             hostname: 'backend',
webserver  |             port: '8000',
webserver  |             agent: [Agent],
webserver  |             nativeProtocols: [Object],
webserver  |             pathname: '/api/v1/auth/login42',
webserver  |             _defaultAgent: [Agent],
webserver  |             host: 'backend',
webserver  |             noDelay: true,
webserver  |             servername: 'backend',
webserver  |             _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |             encoding: null,
webserver  |             singleUse: true
webserver  |           }
webserver  |         },
webserver  |         httpVersionMajor: 1,
webserver  |         httpVersionMinor: 1,
webserver  |         httpVersion: '1.1',
webserver  |         complete: true,
webserver  |         rawHeaders: [
webserver  |           'Server',
webserver  |           'gunicorn',
webserver  |           'Date',
webserver  |           'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |           'Connection',
webserver  |           'close',
webserver  |           'Content-Type',
webserver  |           'application/json',
webserver  |           'Vary',
webserver  |           'Accept, origin',
webserver  |           'Allow',
webserver  |           'POST, OPTIONS',
webserver  |           'X-Frame-Options',
webserver  |           'DENY',
webserver  |           'Content-Length',
webserver  |           '29',
webserver  |           'X-Content-Type-Options',
webserver  |           'nosniff',
webserver  |           'Referrer-Policy',
webserver  |           'same-origin',
webserver  |           'Cross-Origin-Opener-Policy',
webserver  |           'same-origin'
webserver  |         ],
webserver  |         rawTrailers: [],
webserver  |         joinDuplicateHeaders: undefined,
webserver  |         aborted: false,
webserver  |         upgrade: false,
webserver  |         url: '',
webserver  |         method: null,
webserver  |         statusCode: 400,
webserver  |         statusMessage: 'Bad Request',
webserver  |         client: <ref *2> TLSSocket {
webserver  |           _tlsOptions: {
webserver  |             allowHalfOpen: undefined,
webserver  |             pipe: false,
webserver  |             secureContext: [SecureContext],
webserver  |             isServer: false,
webserver  |             requestCert: true,
webserver  |             rejectUnauthorized: false,
webserver  |             session: undefined,
webserver  |             ALPNProtocols: undefined,
webserver  |             requestOCSP: undefined,
webserver  |             enableTrace: undefined,
webserver  |             pskCallback: undefined,
webserver  |             highWaterMark: undefined,
webserver  |             onread: undefined,
webserver  |             signal: undefined
webserver  |           },
webserver  |           _secureEstablished: true,
webserver  |           _securePending: false,
webserver  |           _newSessionPending: false,
webserver  |           _controlReleased: true,
webserver  |           secureConnecting: false,
webserver  |           _SNICallback: null,
webserver  |           servername: 'backend',
webserver  |           alpnProtocol: false,
webserver  |           authorized: false,
webserver  |           authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |           encrypted: true,
webserver  |           _events: [Object: null prototype] {
webserver  |             close: [Array],
webserver  |             end: [Function: onReadableStreamEnd],
webserver  |             error: [Function: socketErrorListener],
webserver  |             newListener: [Function: keylogNewListener],
webserver  |             connect: undefined,
webserver  |             secure: [Function: onConnectSecure],
webserver  |             session: [Function (anonymous)],
webserver  |             free: [Function: onFree],
webserver  |             timeout: [Function: onTimeout],
webserver  |             agentRemove: [Function: onRemove],
webserver  |             data: undefined,
webserver  |             drain: undefined,
webserver  |             finish: [Function]
webserver  |           },
webserver  |           _eventsCount: 10,
webserver  |           connecting: false,
webserver  |           _hadError: false,
webserver  |           _parent: null,
webserver  |           _host: 'backend',
webserver  |           _closeAfterHandlingError: false,
webserver  |           _readableState: ReadableState {
webserver  |             highWaterMark: 65536,
webserver  |             buffer: [],
webserver  |             bufferIndex: 0,
webserver  |             length: 0,
webserver  |             pipes: [],
webserver  |             awaitDrainWriters: null,
webserver  |             [Symbol(kState)]: 60303620
webserver  |           },
webserver  |           _writableState: WritableState {
webserver  |             highWaterMark: 65536,
webserver  |             length: 0,
webserver  |             corked: 0,
webserver  |             onwrite: [Function: bound onwrite],
webserver  |             writelen: 0,
webserver  |             bufferedIndex: 0,
webserver  |             pendingcb: 1,
webserver  |             [Symbol(kState)]: 1091310852,
webserver  |             [Symbol(kBufferedValue)]: null,
webserver  |             [Symbol(kWriteCbValue)]: null
webserver  |           },
webserver  |           allowHalfOpen: false,
webserver  |           _maxListeners: undefined,
webserver  |           _sockname: null,
webserver  |           _pendingData: null,
webserver  |           _pendingEncoding: '',
webserver  |           server: undefined,
webserver  |           _server: null,
webserver  |           ssl: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _requestCert: true,
webserver  |           _rejectUnauthorized: false,
webserver  |           parser: null,
webserver  |           _httpMessage: [Circular *1],
webserver  |           [Symbol(alpncallback)]: null,
webserver  |           [Symbol(res)]: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           [Symbol(verified)]: true,
webserver  |           [Symbol(pendingSession)]: null,
webserver  |           [Symbol(async_id_symbol)]: 64,
webserver  |           [Symbol(kHandle)]: TLSWrap {
webserver  |             _parent: [TCP],
webserver  |             _parentWrap: null,
webserver  |             _secureContext: [SecureContext],
webserver  |             reading: true,
webserver  |             onkeylog: [Function: onkeylog],
webserver  |             onhandshakestart: {},
webserver  |             onhandshakedone: [Function (anonymous)],
webserver  |             onocspresponse: [Function: onocspresponse],
webserver  |             onnewsession: [Function: onnewsessionclient],
webserver  |             onerror: [Function: onerror],
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           [Symbol(lastWriteQueueSize)]: 0,
webserver  |           [Symbol(timeout)]: null,
webserver  |           [Symbol(kBuffer)]: null,
webserver  |           [Symbol(kBufferCb)]: null,
webserver  |           [Symbol(kBufferGen)]: null,
webserver  |           [Symbol(shapeMode)]: true,
webserver  |           [Symbol(kCapture)]: false,
webserver  |           [Symbol(kSetNoDelay)]: false,
webserver  |           [Symbol(kSetKeepAlive)]: true,
webserver  |           [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |           [Symbol(kBytesRead)]: 0,
webserver  |           [Symbol(kBytesWritten)]: 0,
webserver  |           [Symbol(connect-options)]: {
webserver  |             rejectUnauthorized: false,
webserver  |             ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |             checkServerIdentity: [Function: checkServerIdentity],
webserver  |             minDHSize: 1024,
webserver  |             maxRedirects: 21,
webserver  |             maxBodyLength: Infinity,
webserver  |             protocol: 'https:',
webserver  |             path: null,
webserver  |             method: 'POST',
webserver  |             headers: [Object: null prototype],
webserver  |             agents: [Object],
webserver  |             auth: undefined,
webserver  |             family: undefined,
webserver  |             beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |             beforeRedirects: [Object],
webserver  |             hostname: 'backend',
webserver  |             port: '8000',
webserver  |             agent: [Agent],
webserver  |             nativeProtocols: [Object],
webserver  |             pathname: '/api/v1/auth/login42',
webserver  |             _defaultAgent: [Agent],
webserver  |             host: 'backend',
webserver  |             noDelay: true,
webserver  |             servername: 'backend',
webserver  |             _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |             encoding: null,
webserver  |             singleUse: true
webserver  |           }
webserver  |         },
webserver  |         _consuming: true,
webserver  |         _dumped: false,
webserver  |         req: [Circular *1],
webserver  |         _eventsCount: 4,
webserver  |         responseUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |         redirects: [],
webserver  |         [Symbol(shapeMode)]: true,
webserver  |         [Symbol(kCapture)]: false,
webserver  |         [Symbol(kHeaders)]: {
webserver  |           server: 'gunicorn',
webserver  |           date: 'Thu, 20 Jun 2024 08:54:51 GMT',
webserver  |           connection: 'close',
webserver  |           'content-type': 'application/json',
webserver  |           vary: 'Accept, origin',
webserver  |           allow: 'POST, OPTIONS',
webserver  |           'x-frame-options': 'DENY',
webserver  |           'content-length': '29',
webserver  |           'x-content-type-options': 'nosniff',
webserver  |           'referrer-policy': 'same-origin',
webserver  |           'cross-origin-opener-policy': 'same-origin'
webserver  |         },
webserver  |         [Symbol(kHeadersCount)]: 22,
webserver  |         [Symbol(kTrailers)]: null,
webserver  |         [Symbol(kTrailersCount)]: 0
webserver  |       },
webserver  |       aborted: false,
webserver  |       timeoutCb: null,
webserver  |       upgradeOrConnect: false,
webserver  |       parser: null,
webserver  |       maxHeadersCount: null,
webserver  |       reusedSocket: false,
webserver  |       host: 'backend',
webserver  |       protocol: 'https:',
webserver  |       _redirectable: Writable {
webserver  |         _events: {
webserver  |           close: undefined,
webserver  |           error: [Function: handleRequestError],
webserver  |           prefinish: undefined,
webserver  |           finish: undefined,
webserver  |           drain: undefined,
webserver  |           response: [Function: handleResponse],
webserver  |           socket: [Function: handleRequestSocket]
webserver  |         },
webserver  |         _writableState: WritableState {
webserver  |           highWaterMark: 65536,
webserver  |           length: 0,
webserver  |           corked: 0,
webserver  |           onwrite: [Function: bound onwrite],
webserver  |           writelen: 0,
webserver  |           bufferedIndex: 0,
webserver  |           pendingcb: 0,
webserver  |           [Symbol(kState)]: 17580812,
webserver  |           [Symbol(kBufferedValue)]: null
webserver  |         },
webserver  |         _maxListeners: undefined,
webserver  |         _options: {
webserver  |           maxRedirects: 21,
webserver  |           maxBodyLength: Infinity,
webserver  |           protocol: 'https:',
webserver  |           path: '/api/v1/auth/login42',
webserver  |           method: 'POST',
webserver  |           headers: [Object: null prototype] {
webserver  |             Accept: 'application/json, text/plain, */*',
webserver  |             'Content-Type': 'application/json',
webserver  |             'User-Agent': 'axios/1.7.2',
webserver  |             'Content-Length': '2',
webserver  |             'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |           },
webserver  |           agents: { http: undefined, https: [Agent] },
webserver  |           auth: undefined,
webserver  |           family: undefined,
webserver  |           beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |           beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |           hostname: 'backend',
webserver  |           port: '8000',
webserver  |           agent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           nativeProtocols: { 'http:': [Object], 'https:': [Object] },
webserver  |           pathname: '/api/v1/auth/login42'
webserver  |         },
webserver  |         _ended: true,
webserver  |         _ending: true,
webserver  |         _redirectCount: 0,
webserver  |         _redirects: [],
webserver  |         _requestBodyLength: 2,
webserver  |         _requestBodyBuffers: [],
webserver  |         _eventsCount: 3,
webserver  |         _onNativeResponse: [Function (anonymous)],
webserver  |         _currentRequest: [Circular *1],
webserver  |         _currentUrl: 'https://backend:8000/api/v1/auth/login42',
webserver  |         [Symbol(shapeMode)]: true,
webserver  |         [Symbol(kCapture)]: false
webserver  |       },
webserver  |       [Symbol(shapeMode)]: false,
webserver  |       [Symbol(kCapture)]: false,
webserver  |       [Symbol(kBytesWritten)]: 0,
webserver  |       [Symbol(kNeedDrain)]: false,
webserver  |       [Symbol(corked)]: 0,
webserver  |       [Symbol(kChunkedBuffer)]: [],
webserver  |       [Symbol(kChunkedLength)]: 0,
webserver  |       [Symbol(kSocket)]: <ref *2> TLSSocket {
webserver  |         _tlsOptions: {
webserver  |           allowHalfOpen: undefined,
webserver  |           pipe: false,
webserver  |           secureContext: SecureContext { context: SecureContext {} },
webserver  |           isServer: false,
webserver  |           requestCert: true,
webserver  |           rejectUnauthorized: false,
webserver  |           session: undefined,
webserver  |           ALPNProtocols: undefined,
webserver  |           requestOCSP: undefined,
webserver  |           enableTrace: undefined,
webserver  |           pskCallback: undefined,
webserver  |           highWaterMark: undefined,
webserver  |           onread: undefined,
webserver  |           signal: undefined
webserver  |         },
webserver  |         _secureEstablished: true,
webserver  |         _securePending: false,
webserver  |         _newSessionPending: false,
webserver  |         _controlReleased: true,
webserver  |         secureConnecting: false,
webserver  |         _SNICallback: null,
webserver  |         servername: 'backend',
webserver  |         alpnProtocol: false,
webserver  |         authorized: false,
webserver  |         authorizationError: 'DEPTH_ZERO_SELF_SIGNED_CERT',
webserver  |         encrypted: true,
webserver  |         _events: [Object: null prototype] {
webserver  |           close: [
webserver  |             [Function: onSocketCloseDestroySSL],
webserver  |             [Function],
webserver  |             [Function: onClose],
webserver  |             [Function: socketCloseListener]
webserver  |           ],
webserver  |           end: [Function: onReadableStreamEnd],
webserver  |           error: [Function: socketErrorListener],
webserver  |           newListener: [Function: keylogNewListener],
webserver  |           connect: undefined,
webserver  |           secure: [Function: onConnectSecure],
webserver  |           session: [Function (anonymous)],
webserver  |           free: [Function: onFree],
webserver  |           timeout: [Function: onTimeout],
webserver  |           agentRemove: [Function: onRemove],
webserver  |           data: undefined,
webserver  |           drain: undefined,
webserver  |           finish: [Function: bound onceWrapper] {
webserver  |             listener: [Function (anonymous)]
webserver  |           }
webserver  |         },
webserver  |         _eventsCount: 10,
webserver  |         connecting: false,
webserver  |         _hadError: false,
webserver  |         _parent: null,
webserver  |         _host: 'backend',
webserver  |         _closeAfterHandlingError: false,
webserver  |         _readableState: ReadableState {
webserver  |           highWaterMark: 65536,
webserver  |           buffer: [],
webserver  |           bufferIndex: 0,
webserver  |           length: 0,
webserver  |           pipes: [],
webserver  |           awaitDrainWriters: null,
webserver  |           [Symbol(kState)]: 60303620
webserver  |         },
webserver  |         _writableState: WritableState {
webserver  |           highWaterMark: 65536,
webserver  |           length: 0,
webserver  |           corked: 0,
webserver  |           onwrite: [Function: bound onwrite],
webserver  |           writelen: 0,
webserver  |           bufferedIndex: 0,
webserver  |           pendingcb: 1,
webserver  |           [Symbol(kState)]: 1091310852,
webserver  |           [Symbol(kBufferedValue)]: null,
webserver  |           [Symbol(kWriteCbValue)]: null
webserver  |         },
webserver  |         allowHalfOpen: false,
webserver  |         _maxListeners: undefined,
webserver  |         _sockname: null,
webserver  |         _pendingData: null,
webserver  |         _pendingEncoding: '',
webserver  |         server: undefined,
webserver  |         _server: null,
webserver  |         ssl: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         _requestCert: true,
webserver  |         _rejectUnauthorized: false,
webserver  |         parser: null,
webserver  |         _httpMessage: [Circular *1],
webserver  |         [Symbol(alpncallback)]: null,
webserver  |         [Symbol(res)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(verified)]: true,
webserver  |         [Symbol(pendingSession)]: null,
webserver  |         [Symbol(async_id_symbol)]: 64,
webserver  |         [Symbol(kHandle)]: TLSWrap {
webserver  |           _parent: TCP {
webserver  |             reading: [Getter/Setter],
webserver  |             onconnection: null,
webserver  |             [Symbol(owner_symbol)]: [Circular *2]
webserver  |           },
webserver  |           _parentWrap: null,
webserver  |           _secureContext: SecureContext { context: SecureContext {} },
webserver  |           reading: true,
webserver  |           onkeylog: [Function: onkeylog],
webserver  |           onhandshakestart: {},
webserver  |           onhandshakedone: [Function (anonymous)],
webserver  |           onocspresponse: [Function: onocspresponse],
webserver  |           onnewsession: [Function: onnewsessionclient],
webserver  |           onerror: [Function: onerror],
webserver  |           [Symbol(owner_symbol)]: [Circular *2]
webserver  |         },
webserver  |         [Symbol(lastWriteQueueSize)]: 0,
webserver  |         [Symbol(timeout)]: null,
webserver  |         [Symbol(kBuffer)]: null,
webserver  |         [Symbol(kBufferCb)]: null,
webserver  |         [Symbol(kBufferGen)]: null,
webserver  |         [Symbol(shapeMode)]: true,
webserver  |         [Symbol(kCapture)]: false,
webserver  |         [Symbol(kSetNoDelay)]: false,
webserver  |         [Symbol(kSetKeepAlive)]: true,
webserver  |         [Symbol(kSetKeepAliveInitialDelay)]: 60,
webserver  |         [Symbol(kBytesRead)]: 0,
webserver  |         [Symbol(kBytesWritten)]: 0,
webserver  |         [Symbol(connect-options)]: {
webserver  |           rejectUnauthorized: false,
webserver  |           ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
webserver  |           checkServerIdentity: [Function: checkServerIdentity],
webserver  |           minDHSize: 1024,
webserver  |           maxRedirects: 21,
webserver  |           maxBodyLength: Infinity,
webserver  |           protocol: 'https:',
webserver  |           path: null,
webserver  |           method: 'POST',
webserver  |           headers: [Object: null prototype] {
webserver  |             Accept: 'application/json, text/plain, */*',
webserver  |             'Content-Type': 'application/json',
webserver  |             'User-Agent': 'axios/1.7.2',
webserver  |             'Content-Length': '2',
webserver  |             'Accept-Encoding': 'gzip, compress, deflate, br'
webserver  |           },
webserver  |           agents: { http: undefined, https: [Agent] },
webserver  |           auth: undefined,
webserver  |           family: undefined,
webserver  |           beforeRedirect: [Function: dispatchBeforeRedirect],
webserver  |           beforeRedirects: { proxy: [Function: beforeRedirect] },
webserver  |           hostname: 'backend',
webserver  |           port: '8000',
webserver  |           agent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype],
webserver  |             freeSockets: [Object: null prototype] {},
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: false,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           nativeProtocols: { 'http:': [Object], 'https:': [Object] },
webserver  |           pathname: '/api/v1/auth/login42',
webserver  |           _defaultAgent: Agent {
webserver  |             _events: [Object: null prototype],
webserver  |             _eventsCount: 2,
webserver  |             _maxListeners: undefined,
webserver  |             defaultPort: 443,
webserver  |             protocol: 'https:',
webserver  |             options: [Object: null prototype],
webserver  |             requests: [Object: null prototype] {},
webserver  |             sockets: [Object: null prototype] {},
webserver  |             freeSockets: [Object: null prototype],
webserver  |             keepAliveMsecs: 1000,
webserver  |             keepAlive: true,
webserver  |             maxSockets: Infinity,
webserver  |             maxFreeSockets: 256,
webserver  |             scheduling: 'lifo',
webserver  |             maxTotalSockets: Infinity,
webserver  |             totalSocketCount: 1,
webserver  |             maxCachedSessions: 100,
webserver  |             _sessionCache: [Object],
webserver  |             [Symbol(shapeMode)]: false,
webserver  |             [Symbol(kCapture)]: false
webserver  |           },
webserver  |           host: 'backend',
webserver  |           noDelay: true,
webserver  |           servername: 'backend',
webserver  |           _agentKey: 'backend:8000::::::::false:::::::::::::',
webserver  |           encoding: null,
webserver  |           singleUse: true
webserver  |         }
webserver  |       },
webserver  |       [Symbol(kOutHeaders)]: [Object: null prototype] {
webserver  |         accept: [ 'Accept', 'application/json, text/plain, */*' ],
webserver  |         'content-type': [ 'Content-Type', 'application/json' ],
webserver  |         'user-agent': [ 'User-Agent', 'axios/1.7.2' ],
webserver  |         'content-length': [ 'Content-Length', '2' ],
webserver  |         'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
webserver  |         host: [ 'Host', 'backend:8000' ]
webserver  |       },
webserver  |       [Symbol(errored)]: null,
webserver  |       [Symbol(kHighWaterMark)]: 65536,
webserver  |       [Symbol(kRejectNonStandardBodyWrites)]: false,
webserver  |       [Symbol(kUniqueHeaders)]: null
webserver  |     },
webserver  |     data: { error: 'No token provided' }
webserver  |   }
webserver  | }
webserver  | 
webserver  | Node.js v22.3.0
webserver  | Server running on port 5500
webserver  | starting request42token-------------
webserver  | then request42Token------
webserver  | 200
webserver  | Could not read file: web/index.html
webserver  | node:_http_server:345
webserver  |     throw new ERR_HTTP_HEADERS_SENT('write');
webserver  |           ^
webserver  | 
webserver  | Error [ERR_HTTP_HEADERS_SENT]: Cannot write headers after they are sent to the client
webserver  |     at ServerResponse.writeHead (node:_http_server:345:11)
webserver  |     at Server.requestListener (/webServer/webServer/js/webServer.js:59:13) {
webserver  |   code: 'ERR_HTTP_HEADERS_SENT'
webserver  | }
webserver  | 
webserver  | Node.js v22.3.0
webserver  | Server running on port 5500
webserver  | starting request42token-------------
webserver  | then request42Token------
webserver  | 200
webserver  | Could not read file: web/index.html
webserver  | node:_http_server:345
webserver  |     throw new ERR_HTTP_HEADERS_SENT('write');
webserver  |           ^
webserver  | 
webserver  | Error [ERR_HTTP_HEADERS_SENT]: Cannot write headers after they are sent to the client
webserver  |     at ServerResponse.writeHead (node:_http_server:345:11)
webserver  |     at Server.requestListener (/webServer/webServer/js/webServer.js:59:13) {
webserver  |   code: 'ERR_HTTP_HEADERS_SENT'
webserver  | }
webserver  | 
webserver  | Node.js v22.3.0
webserver  | Server running on port 5500
