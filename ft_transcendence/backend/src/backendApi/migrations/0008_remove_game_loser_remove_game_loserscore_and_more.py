# Generated by Django 5.0.4 on 2024-04-26 07:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backendApi', '0007_channelbanneduser_bannedreason_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='game',
            name='loser',
        ),
        migrations.RemoveField(
            model_name='game',
            name='loserScore',
        ),
        migrations.RemoveField(
            model_name='game',
            name='users',
        ),
        migrations.RemoveField(
            model_name='gamescore',
            name='user',
        ),
        migrations.AddField(
            model_name='game',
            name='owner',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='players',
            field=models.ManyToManyField(related_name='game_players', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gamescore',
            name='player',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gamescore_player', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='game',
            name='maxScore',
            field=models.IntegerField(default=5),
        ),
        migrations.AlterField(
            model_name='game',
            name='mode',
            field=models.CharField(choices=[('classic', 'Classic'), ('ranked', 'Ranked'), ('tournament', 'Tournament')], default='classic'),
        ),
        migrations.AlterField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_winner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('max_players', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('players', models.ManyToManyField(related_name='tournament_players', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_tournament', to='backendApi.tournament'),
        ),
    ]
