"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load .env file
if os.getenv("SECRET_KEY") is None:
    load_dotenv()

from .configs import app

# Load config file
SECRET_KEY = app["SECRET_KEY"]
POSTGRES_DB = app["POSTGRES_DB"]
POSTGRES_USER = app["POSTGRES_USER"]
POSTGRES_PASSWORD = app["POSTGRES_PASSWORD"]
POSTGRES_PORT = app["POSTGRES_PORT"]
BACKEND_PORT = app["BACKEND_PORT"]
FRONTEND_PORT = app["FRONTEND_PORT"]
BACKEND_URL = app["BACKEND_URL"]
FRONTEND_URL = app["FRONTEND_URL"]
SSL_CERTIFICATE = app["SSL_CERTIFICATE"]
SSL_CERTIFICATE_KEY = app["SSL_CERTIFICATE_KEY"]

isDev = False

if isDev:
    DEBUG = app["dev"]["DEBUG"]
    POSTGRES_HOST = app["dev"]["POSTGRES_HOST"]
    DATABASE_URL = app["dev"]["DATABASE_URL"]
else:
    DEBUG = app["prod"]["DEBUG"]
    POSTGRES_HOST = app["prod"]["POSTGRES_HOST"]
    DATABASE_URL = app["prod"]["DATABASE_URL"]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    os.getenv("FRONTEND_URL"),
    os.getenv("BACKEND_URL"),
]


# Configure SSL/TLS settings
# SECURE_SSL_REDIRECT = True
# SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "backendApi",
    "rest_framework",
    "rest_framework_simplejwt",
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        # Config database Postgres
        "ENGINE": "django.db.backends.postgresql",
        "URL": DATABASE_URL,
        "NAME": POSTGRES_DB,
        "USER": POSTGRES_USER,
        "PASSWORD": POSTGRES_PASSWORD,
        "HOST": POSTGRES_HOST,
        "PORT": POSTGRES_PORT,
    }
}

# Set AUTH_USER_MODEL
AUTH_USER_MODEL = "backendApi.User"

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Config use rest_framework
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ]
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
}

CORS_ALLOWED_ORIGINS = [
    f"http://{os.getenv('FRONTEND_URL')}:{os.getenv('FRONTEND_PORT')}",
    f"https://{os.getenv('FRONTEND_URL')}:{os.getenv('FRONTEND_PORT')}",
    f"http://{os.getenv('BACKEND_URL')}:{os.getenv('BACKEND_PORT')}",
    f"https://{os.getenv('BACKEND_URL')}:{os.getenv('BACKEND_PORT')}",
    "http://127.0.0.1:5500",
    "https://127.0.0.1:5500",
]

CORS_ALLOW_WEBSOCKETS = True
CORS_URLS_REGEX = r"^/(ws/.*|api/.*|admin/.*|static/.*|media/.*)$"

CORS_ALLOW_METHODS = [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
]

CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "x-csrftoken",
    "accept",
    "user-agent",
]

CORS_EXPOSE_HEADERS = [
    "content-type",
    "authorization",
]
