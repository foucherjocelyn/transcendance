services:
    db:
        image: postgres:16-bullseye
        restart: always
        env_file:
            - .env
        volumes:
            - postgres-data:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        networks:
            - transcendence
        healthcheck:
            test:
                [
                    "CMD",
                    "pg_isready",
                    "-q",
                    "-d",
                    "${POSTGRES_DB}",
                    "-U",
                    "${POSTGRES_USER}"
                ]
            interval: 5s
            timeout: 5s
            retries: 5
        hostname: db

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        restart: always
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
        networks:
            - transcendence
    websocket:
        image: websocket
        build: ./front_end/webSocket
        container_name: websocket
        env_file:
            - .env
        ports:
            - "5555:5555"
        networks:
            - transcendence
        restart: always

    webserver:
        image: webserver
        build: ./front_end/webServer
        container_name: webserver
        depends_on:
            - websocket
        env_file:
            - .env
        ports:
            - "5500:5500"
        networks:
            - transcendence
        restart: always

volumes:
    postgres-data:
        driver: local

networks:
    transcendence:
        driver: bridge
